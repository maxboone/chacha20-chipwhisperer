   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0_hal_lowlevel.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 ".././hal/stm32f0/stm32f0_hal_lowlevel.c"
  18              		.section	.text.HAL_GetTick,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_GetTick
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	HAL_GetTick:
  26              	.LFB37:
   1:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /* This file combines several STM32F4 HAL Functions into one file. This was done
   2:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    for space reasons, to avoid having several MB of HAL functions that most people
   3:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    will not use. In addition this HAL is slightly less demanding (no interrupts),
   4:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    but less robust as doesn't implement the timeouts.
   5:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    
   6:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    The original HAL files are COPYRIGHT STMicroelectronics, as shown below:
   7:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** */
   8:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
   9:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /*
  10:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
  11:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
  12:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * Redistribution and use in source and binary forms, with or without modification,
  13:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * are permitted provided that the following conditions are met:
  14:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  15:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer.
  16:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  17:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer in the documentation
  18:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      and/or other materials provided with the distribution.
  19:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  20:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      may be used to endorse or promote products derived from this software
  21:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *      without specific prior written permission.
  22:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
  23:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  26:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  27:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  28:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  29:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  30:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  31:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  32:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
  34:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   ******************************************************************************
  35:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** */ 
  36:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  37:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  38:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0_hal.h"
  39:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0_hal_lowlevel.h"
  40:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_rcc.h"
  41:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_gpio.h"
  42:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_dma.h"
  43:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_uart.h"
  44:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #include "stm32f0xx_hal_flash.h"
  45:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  46:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define assert_param(expr) ((void)0U)
  47:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  48:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_GetTick(void)
  49:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  27              		.loc 1 49 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  50:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	static uint32_t tick;
  32              		.loc 1 50 2 view .LVU1
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
  33              		.loc 1 51 2 view .LVU2
  34              		.loc 1 51 13 is_stmt 0 view .LVU3
  35 0000 024B     		ldr	r3, .L2
  52:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  36              		.loc 1 52 1 view .LVU4
  37              		@ sp needed
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
  38              		.loc 1 51 13 view .LVU5
  39 0002 1868     		ldr	r0, [r3]
  40 0004 421C     		adds	r2, r0, #1
  41 0006 1A60     		str	r2, [r3]
  51:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return tick++;;
  42              		.loc 1 51 16 is_stmt 1 view .LVU6
  43              		.loc 1 52 1 is_stmt 0 view .LVU7
  44 0008 7047     		bx	lr
  45              	.L3:
  46 000a C046     		.align	2
  47              	.L2:
  48 000c 00000000 		.word	.LANCHOR0
  49              		.cfi_endproc
  50              	.LFE37:
  52              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
  53              		.align	1
  54              		.global	HAL_RCC_GetSysClockFreq
  55              		.syntax unified
  56              		.code	16
  57              		.thumb_func
  59              	HAL_RCC_GetSysClockFreq:
  60              	.LFB38:
  53:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  54:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
  55:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
  56:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 									 
  57:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t SystemCoreClock = 8000000;
  58:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  59:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  60:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
  61:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  61              		.loc 1 61 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  62:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return 7372800U;
  66              		.loc 1 62 2 view .LVU9
  67              		.loc 1 62 9 is_stmt 0 view .LVU10
  68 0000 E120     		movs	r0, #225
  63:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  69              		.loc 1 63 1 view .LVU11
  70              		@ sp needed
  71 0002 C003     		lsls	r0, r0, #15
  72 0004 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE38:
  76              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
  77              		.align	1
  78              		.global	HAL_RCC_GetPCLK1Freq
  79              		.syntax unified
  80              		.code	16
  81              		.thumb_func
  83              	HAL_RCC_GetPCLK1Freq:
  84              	.LFB53:
  85              		.cfi_startproc
  64:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  65:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
  86              		.loc 1 65 10 is_stmt 1 view -0
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90 0000 E120     		movs	r0, #225
  91              		@ sp needed
  92 0002 C003     		lsls	r0, r0, #15
  93 0004 7047     		bx	lr
  94              		.cfi_endproc
  95              	.LFE53:
  97              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
  98              		.align	1
  99              		.global	HAL_RCC_GetPCLK2Freq
 100              		.syntax unified
 101              		.code	16
 102              		.thumb_func
 104              	HAL_RCC_GetPCLK2Freq:
 105              	.LFB55:
 106              		.cfi_startproc
  66:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  67:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 	return 7372800U;
  68:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  69:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  70:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
  71:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Returns the PCLK2 frequency
  72:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
  73:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
  74:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval PCLK2 frequency
  75:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
  76:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 107              		.loc 1 76 10 view -0
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
 111 0000 E120     		movs	r0, #225
 112              		@ sp needed
 113 0002 C003     		lsls	r0, r0, #15
 114 0004 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE55:
 118              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 119              		.align	1
 120              		.global	HAL_RCC_OscConfig
 121              		.syntax unified
 122              		.code	16
 123              		.thumb_func
 125              	HAL_RCC_OscConfig:
 126              	.LVL0:
 127              	.LFB41:
  77:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
  78:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  79:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   //return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_C
  80:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return 7372800;
  81:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
  82:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
  83:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
  84:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
  85:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         RCC_OscInitTypeDef.
  86:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
  87:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         contains the configuration information for the RCC Oscillators.
  88:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   The PLL is not disabled when used as system clock.
  89:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
  90:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         supported by this macro. User should request a transition to LSE Off
  91:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         first and then LSE On or LSE Bypass.
  92:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
  93:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         supported by this macro. User should request a transition to HSE Off
  94:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         first and then HSE On or HSE Bypass.
  95:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
  96:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
  97:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
  98:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 128              		.loc 1 98 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 16
 131              		@ frame_needed = 0, uses_anonymous_args = 0
  99:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 132              		.loc 1 99 4 view .LVU15
 100:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 101:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 102:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(RCC_OscInitStruct != NULL);
 133              		.loc 1 102 3 view .LVU16
 103:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 134              		.loc 1 103 3 view .LVU17
 104:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 105:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 106:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 135              		.loc 1 106 3 view .LVU18
  98:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 136              		.loc 1 98 1 is_stmt 0 view .LVU19
 137 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 138              	.LCFI0:
 139              		.cfi_def_cfa_offset 20
 140              		.cfi_offset 4, -20
 141              		.cfi_offset 5, -16
 142              		.cfi_offset 6, -12
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145              		.loc 1 106 43 view .LVU20
 146 0002 0368     		ldr	r3, [r0]
  98:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 147              		.loc 1 98 1 view .LVU21
 148 0004 0400     		movs	r4, r0
 149 0006 85B0     		sub	sp, sp, #20
 150              	.LCFI1:
 151              		.cfi_def_cfa_offset 40
 152              		.loc 1 106 5 view .LVU22
 153 0008 DB07     		lsls	r3, r3, #31
 154 000a 2FD4     		bmi	.L8
 155              	.LVL1:
 156              	.L13:
 107:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 108:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 109:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 110:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 111:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 114:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 116:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 118:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 119:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 120:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 121:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 122:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Set the new HSE configuration ---------------------------------------*/
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 124:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 125:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 126:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* Check the HSE State */
 127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 128:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 129:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 131:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 132:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSE is ready */
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 134:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 136:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 137:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 138:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 139:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 140:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 141:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 142:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 143:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 145:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 146:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSE is disabled */
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 148:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 150:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 151:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 152:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 153:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 154:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 155:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 156:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 157:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 158:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 157              		.loc 1 158 3 is_stmt 1 view .LVU23
 158              		.loc 1 158 43 is_stmt 0 view .LVU24
 159 000c 2368     		ldr	r3, [r4]
 160              		.loc 1 158 5 view .LVU25
 161 000e 9B07     		lsls	r3, r3, #30
 162 0010 00D5     		bpl	.LCB99
 163 0012 81E0     		b	.L9	@long jump
 164              	.LCB99:
 165              	.L25:
 159:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 160:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 161:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 162:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 163:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 164:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 167:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* When HSI is used as system clock it will not disabled */
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 170:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 171:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 172:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 173:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Otherwise, just the calibration is allowed */
 174:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 175:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 176:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 177:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 178:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 179:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 180:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 181:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI State */
 183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 184:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 185:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_ENABLE();
 187:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 188:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 190:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI is ready */
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 193:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 195:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 196:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 198:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 199:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                 
 200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 201:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 202:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 204:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 205:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI_DISABLE();
 207:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 208:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 210:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI is disabled */
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 213:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 215:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 216:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 218:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 219:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 220:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 221:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 222:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 166              		.loc 1 223 3 is_stmt 1 view .LVU26
 167              		.loc 1 223 43 is_stmt 0 view .LVU27
 168 0014 2368     		ldr	r3, [r4]
 169              		.loc 1 223 5 view .LVU28
 170 0016 1B07     		lsls	r3, r3, #28
 171 0018 00D5     		bpl	.LCB106
 172 001a BCE0     		b	.L35	@long jump
 173              	.LCB106:
 174              	.L41:
 224:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 225:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 227:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 228:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSI State */
 229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 230:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 231:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_LSI_ENABLE();
 233:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 234:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 236:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 237:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSI is ready */  
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 239:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 241:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 242:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 243:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 244:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 245:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 246:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 247:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 248:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_LSI_DISABLE();
 250:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 251:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 253:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 254:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSI is disabled */  
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 256:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 258:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 259:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 260:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 261:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 262:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 263:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 264:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 265:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 175              		.loc 1 265 3 is_stmt 1 view .LVU29
 176              		.loc 1 265 43 is_stmt 0 view .LVU30
 177 001c 2368     		ldr	r3, [r4]
 178              		.loc 1 265 5 view .LVU31
 179 001e 5B07     		lsls	r3, r3, #29
 180 0020 00D5     		bpl	.LCB113
 181 0022 DFE0     		b	.L36	@long jump
 182              	.LCB113:
 183              	.L44:
 266:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     FlagStatus       pwrclkchanged = RESET;
 268:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 269:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 270:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 271:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 272:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Update LSE configuration in Backup Domain control register    */
 273:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Requires to enable write access to Backup Domain of necessary */
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 275:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 277:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 278:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 279:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 281:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable write access to Backup domain */
 283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 284:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 285:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait for Backup domain Write protection disable */
 286:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 287:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 289:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 291:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 292:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 293:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 294:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 295:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 296:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 297:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Set the new LSE configuration -----------------------------------------*/
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 299:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 300:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 301:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 302:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 304:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 305:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSE is ready */  
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 307:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 309:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 310:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 311:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 312:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 313:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 314:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 315:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 316:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 318:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 319:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till LSE is disabled */  
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 321:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 323:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 324:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 325:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 326:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 327:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 328:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 329:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Require to disable power clock if necessary */
 330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(pwrclkchanged == SET)
 331:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 332:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 333:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 335:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 336:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- HSI14 Configuration --------------------------*/
 337:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 184              		.loc 1 337 3 is_stmt 1 view .LVU32
 185              		.loc 1 337 43 is_stmt 0 view .LVU33
 186 0024 2368     		ldr	r3, [r4]
 187              		.loc 1 337 5 view .LVU34
 188 0026 DB06     		lsls	r3, r3, #27
 189 0028 1AD5     		bpl	.L62
 338:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 339:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 340:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
 190              		.loc 1 340 5 is_stmt 1 view .LVU35
 341:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));
 191              		.loc 1 341 5 view .LVU36
 342:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 343:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the HSI14 State */
 344:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 192              		.loc 1 344 5 view .LVU37
 193              		.loc 1 344 25 is_stmt 0 view .LVU38
 194 002a 6269     		ldr	r2, [r4, #20]
 195 002c 0423     		movs	r3, #4
 196 002e B44D     		ldr	r5, .L111
 197              		.loc 1 344 7 view .LVU39
 198 0030 012A     		cmp	r2, #1
 199 0032 00D0     		beq	.LCB128
 200 0034 48E1     		b	.L63	@long jump
 201              	.LCB128:
 345:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 346:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 347:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 202              		.loc 1 347 7 is_stmt 1 view .LVU40
 203 0036 696B     		ldr	r1, [r5, #52]
 348:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 349:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable the Internal High Speed oscillator (HSI). */
 350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_ENABLE();
 351:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 354:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 355:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till HSI is ready */  
 356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 204              		.loc 1 356 13 is_stmt 0 view .LVU41
 205 0038 0227     		movs	r7, #2
 347:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 206              		.loc 1 347 7 view .LVU42
 207 003a 0B43     		orrs	r3, r1
 208 003c 6B63     		str	r3, [r5, #52]
 350:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 209              		.loc 1 350 7 is_stmt 1 view .LVU43
 210 003e 6B6B     		ldr	r3, [r5, #52]
 211 0040 1A43     		orrs	r2, r3
 212 0042 6A63     		str	r2, [r5, #52]
 353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 213              		.loc 1 353 7 view .LVU44
 353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 214              		.loc 1 353 19 is_stmt 0 view .LVU45
 215 0044 FFF7FEFF 		bl	HAL_GetTick
 216              	.LVL2:
 217 0048 0600     		movs	r6, r0
 218              	.LVL3:
 219              		.loc 1 356 7 is_stmt 1 view .LVU46
 220              	.L64:
 221              		.loc 1 356 51 view .LVU47
 222              		.loc 1 356 13 is_stmt 0 view .LVU48
 223 004a 6B6B     		ldr	r3, [r5, #52]
 224              		.loc 1 356 51 view .LVU49
 225 004c 3B42     		tst	r3, r7
 226 004e 00D1     		bne	.LCB150
 227 0050 33E1     		b	.L65	@long jump
 228              	.LCB150:
 229              	.LVL4:
 230              	.L108:
 357:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 359:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 360:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }      
 362:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       } 
 363:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 364:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 365:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 366:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 368:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 369:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable ADC control of the Internal High Speed oscillator HSI14 */
 370:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14ADC_ENABLE();
 371:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 372:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 373:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 231              		.loc 1 373 7 is_stmt 1 view .LVU50
 232 0052 F821     		movs	r1, #248
 233 0054 6A6B     		ldr	r2, [r5, #52]
 234 0056 A369     		ldr	r3, [r4, #24]
 235 0058 8A43     		bics	r2, r1
 236 005a DB00     		lsls	r3, r3, #3
 237 005c 1343     		orrs	r3, r2
 238 005e 6B63     		str	r3, [r5, #52]
 239              	.L62:
 374:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 376:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 379:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 380:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Disable the Internal High Speed oscillator (HSI). */
 381:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_HSI14_DISABLE();
 382:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 383:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Get Start Tick */
 384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait till HSI is ready */  
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 388:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 391:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 392:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 393:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 394:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 395:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 396:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 397:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(RCC_HSI48_SUPPORT)
 398:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 399:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 400:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 401:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 402:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 403:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 404:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* When the HSI48 is used as system clock it is not allowed to be disabled */
 405:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 406:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 407:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 408:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_
 409:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 410:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 411:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 412:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 413:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 414:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 415:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI48 State */
 416:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 417:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 418:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 419:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI48_ENABLE();
 420:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 422:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 423:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 424:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI48 is ready */  
 425:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 426:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 427:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 429:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 430:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 431:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         } 
 432:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 433:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 434:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 435:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_HSI48_DISABLE();
 437:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 439:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 440:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 441:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till HSI48 is ready */  
 442:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 443:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 444:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 445:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 446:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 448:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 449:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 450:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 451:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 452:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* RCC_HSI48_SUPPORT */
 453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        
 454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 456:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 240              		.loc 1 456 3 view .LVU51
 457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 241              		.loc 1 457 3 view .LVU52
 242              		.loc 1 457 30 is_stmt 0 view .LVU53
 243 0060 216A     		ldr	r1, [r4, #32]
 244              		.loc 1 457 6 view .LVU54
 245 0062 0029     		cmp	r1, #0
 246 0064 00D0     		beq	.LCB168
 247 0066 57E1     		b	.L70	@long jump
 248              	.LCB168:
 249              	.LVL5:
 250              	.L76:
 458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 459:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if the PLL is used as system clock or not */
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 461:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 463:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 464:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Check the parameters */
 465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 467:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 468:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 469:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the main PLL. */
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 471:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 472:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 474:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 475:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till PLL is disabled */
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 477:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 479:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 480:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 481:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 482:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 483:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 484:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 486:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 487:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 488:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Enable the main PLL. */
 489:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_ENABLE();
 490:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 491:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 492:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 493:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 494:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till PLL is ready */
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 496:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 498:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 499:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 500:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 501:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 502:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 503:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
 504:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 505:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable the main PLL. */
 506:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 507:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  
 508:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 510:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 511:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till PLL is disabled */  
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 513:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 515:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 516:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 517:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 518:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 519:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 520:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 521:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 522:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 523:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_ERROR;
 524:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 525:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 526:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 527:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 251              		.loc 1 527 10 view .LVU55
 252 0068 0020     		movs	r0, #0
 253 006a 2AE0     		b	.L21
 254              	.LVL6:
 255              	.L8:
 109:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 256              		.loc 1 109 5 is_stmt 1 view .LVU56
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 257              		.loc 1 112 5 view .LVU57
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 258              		.loc 1 112 9 is_stmt 0 view .LVU58
 259 006c 0C22     		movs	r2, #12
 260 006e A44D     		ldr	r5, .L111
 261 0070 6B68     		ldr	r3, [r5, #4]
 262 0072 1340     		ands	r3, r2
 112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 263              		.loc 1 112 7 view .LVU59
 264 0074 042B     		cmp	r3, #4
 265 0076 06D0     		beq	.L11
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 266              		.loc 1 113 13 view .LVU60
 267 0078 6B68     		ldr	r3, [r5, #4]
 268 007a 1340     		ands	r3, r2
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 269              		.loc 1 113 8 view .LVU61
 270 007c 082B     		cmp	r3, #8
 271 007e 0AD1     		bne	.L12
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 272              		.loc 1 113 82 discriminator 1 view .LVU62
 273 0080 6B68     		ldr	r3, [r5, #4]
 113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 274              		.loc 1 113 78 discriminator 1 view .LVU63
 275 0082 DB03     		lsls	r3, r3, #15
 276 0084 07D5     		bpl	.L12
 277              	.L11:
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 278              		.loc 1 115 7 is_stmt 1 view .LVU64
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 279              		.loc 1 115 11 is_stmt 0 view .LVU65
 280 0086 2B68     		ldr	r3, [r5]
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 281              		.loc 1 115 9 view .LVU66
 282 0088 9B03     		lsls	r3, r3, #14
 283 008a BFD5     		bpl	.L13
 115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 284              		.loc 1 115 57 discriminator 1 view .LVU67
 285 008c 6368     		ldr	r3, [r4, #4]
 286 008e 002B     		cmp	r3, #0
 287 0090 BCD1     		bne	.L13
 288              	.LVL7:
 289              	.L14:
 117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 290              		.loc 1 117 16 view .LVU68
 291 0092 0120     		movs	r0, #1
 292 0094 15E0     		b	.L21
 293              	.LVL8:
 294              	.L12:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 295              		.loc 1 123 7 is_stmt 1 view .LVU69
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 296              		.loc 1 123 7 view .LVU70
 297 0096 6368     		ldr	r3, [r4, #4]
 298 0098 012B     		cmp	r3, #1
 299 009a 14D1     		bne	.L15
 300              	.L109:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 301              		.loc 1 123 7 discriminator 7 view .LVU71
 302 009c 8023     		movs	r3, #128
 303 009e 2A68     		ldr	r2, [r5]
 304 00a0 5B02     		lsls	r3, r3, #9
 305 00a2 1343     		orrs	r3, r2
 306              	.L105:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 307              		.loc 1 123 7 is_stmt 0 discriminator 8 view .LVU72
 308 00a4 2B60     		str	r3, [r5]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 309              		.loc 1 123 7 is_stmt 1 discriminator 8 view .LVU73
 127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 310              		.loc 1 127 7 discriminator 8 view .LVU74
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 311              		.loc 1 130 9 discriminator 8 view .LVU75
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 312              		.loc 1 130 21 is_stmt 0 discriminator 8 view .LVU76
 313 00a6 FFF7FEFF 		bl	HAL_GetTick
 314              	.LVL9:
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 315              		.loc 1 133 15 discriminator 8 view .LVU77
 316 00aa 8027     		movs	r7, #128
 130:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 317              		.loc 1 130 21 discriminator 8 view .LVU78
 318 00ac 0600     		movs	r6, r0
 319              	.LVL10:
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 320              		.loc 1 133 9 is_stmt 1 discriminator 8 view .LVU79
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 321              		.loc 1 133 15 is_stmt 0 discriminator 8 view .LVU80
 322 00ae BF02     		lsls	r7, r7, #10
 323              	.LVL11:
 324              	.L20:
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 325              		.loc 1 133 51 is_stmt 1 view .LVU81
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 326              		.loc 1 133 15 is_stmt 0 view .LVU82
 327 00b0 2B68     		ldr	r3, [r5]
 133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 328              		.loc 1 133 51 view .LVU83
 329 00b2 3B42     		tst	r3, r7
 330 00b4 AAD1     		bne	.L13
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 331              		.loc 1 135 11 is_stmt 1 view .LVU84
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 332              		.loc 1 135 15 is_stmt 0 view .LVU85
 333 00b6 FFF7FEFF 		bl	HAL_GetTick
 334              	.LVL12:
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 335              		.loc 1 135 29 view .LVU86
 336 00ba 801B     		subs	r0, r0, r6
 135:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 337              		.loc 1 135 13 view .LVU87
 338 00bc 6428     		cmp	r0, #100
 339 00be F7D9     		bls	.L20
 340              	.LVL13:
 341              	.L23:
 137:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 342              		.loc 1 137 20 view .LVU88
 343 00c0 0320     		movs	r0, #3
 344              	.L21:
 528:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 345              		.loc 1 528 1 view .LVU89
 346 00c2 05B0     		add	sp, sp, #20
 347              		@ sp needed
 348 00c4 F0BD     		pop	{r4, r5, r6, r7, pc}
 349              	.LVL14:
 350              	.L15:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 351              		.loc 1 123 7 is_stmt 1 discriminator 2 view .LVU90
 352 00c6 002B     		cmp	r3, #0
 353 00c8 16D1     		bne	.L17
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 354              		.loc 1 123 7 discriminator 4 view .LVU91
 355 00ca 2B68     		ldr	r3, [r5]
 356 00cc 8D4A     		ldr	r2, .L111+4
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 357              		.loc 1 147 15 is_stmt 0 discriminator 4 view .LVU92
 358 00ce 8027     		movs	r7, #128
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 359              		.loc 1 123 7 discriminator 4 view .LVU93
 360 00d0 1340     		ands	r3, r2
 361 00d2 2B60     		str	r3, [r5]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 362              		.loc 1 123 7 is_stmt 1 discriminator 4 view .LVU94
 363 00d4 2B68     		ldr	r3, [r5]
 364 00d6 8C4A     		ldr	r2, .L111+8
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 365              		.loc 1 147 15 is_stmt 0 discriminator 4 view .LVU95
 366 00d8 BF02     		lsls	r7, r7, #10
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 367              		.loc 1 123 7 discriminator 4 view .LVU96
 368 00da 1340     		ands	r3, r2
 369 00dc 2B60     		str	r3, [r5]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 370              		.loc 1 123 7 is_stmt 1 discriminator 4 view .LVU97
 127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 371              		.loc 1 127 7 discriminator 4 view .LVU98
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 372              		.loc 1 144 9 discriminator 4 view .LVU99
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 373              		.loc 1 144 21 is_stmt 0 discriminator 4 view .LVU100
 374 00de FFF7FEFF 		bl	HAL_GetTick
 375              	.LVL15:
 144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 376              		.loc 1 144 21 discriminator 4 view .LVU101
 377 00e2 0600     		movs	r6, r0
 378              	.LVL16:
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 379              		.loc 1 147 9 is_stmt 1 discriminator 4 view .LVU102
 380              	.L18:
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 381              		.loc 1 147 51 view .LVU103
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 382              		.loc 1 147 15 is_stmt 0 view .LVU104
 383 00e4 2B68     		ldr	r3, [r5]
 147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 384              		.loc 1 147 51 view .LVU105
 385 00e6 3B42     		tst	r3, r7
 386 00e8 00D1     		bne	.LCB304
 387 00ea 8FE7     		b	.L13	@long jump
 388              	.LCB304:
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 389              		.loc 1 149 12 is_stmt 1 view .LVU106
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 390              		.loc 1 149 16 is_stmt 0 view .LVU107
 391 00ec FFF7FEFF 		bl	HAL_GetTick
 392              	.LVL17:
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 393              		.loc 1 149 30 view .LVU108
 394 00f0 801B     		subs	r0, r0, r6
 149:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 395              		.loc 1 149 14 view .LVU109
 396 00f2 6428     		cmp	r0, #100
 397 00f4 F6D9     		bls	.L18
 398 00f6 E3E7     		b	.L23
 399              	.LVL18:
 400              	.L17:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 401              		.loc 1 123 7 is_stmt 1 discriminator 5 view .LVU110
 402 00f8 052B     		cmp	r3, #5
 403 00fa 05D1     		bne	.L19
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 404              		.loc 1 123 7 discriminator 7 view .LVU111
 405 00fc 8023     		movs	r3, #128
 406 00fe 2A68     		ldr	r2, [r5]
 407 0100 DB02     		lsls	r3, r3, #11
 408 0102 1343     		orrs	r3, r2
 409 0104 2B60     		str	r3, [r5]
 410 0106 C9E7     		b	.L109
 411              	.L19:
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 412              		.loc 1 123 7 discriminator 8 view .LVU112
 413 0108 2B68     		ldr	r3, [r5]
 414 010a 7E4A     		ldr	r2, .L111+4
 415 010c 1340     		ands	r3, r2
 416 010e 2B60     		str	r3, [r5]
 123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 417              		.loc 1 123 7 discriminator 8 view .LVU113
 418 0110 2B68     		ldr	r3, [r5]
 419 0112 7D4A     		ldr	r2, .L111+8
 420 0114 1340     		ands	r3, r2
 421 0116 C5E7     		b	.L105
 422              	.LVL19:
 423              	.L9:
 161:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 424              		.loc 1 161 5 view .LVU114
 162:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 425              		.loc 1 162 5 view .LVU115
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 426              		.loc 1 165 5 view .LVU116
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 427              		.loc 1 165 9 is_stmt 0 view .LVU117
 428 0118 0C22     		movs	r2, #12
 429 011a 794D     		ldr	r5, .L111
 430 011c 6B68     		ldr	r3, [r5, #4]
 165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 431              		.loc 1 165 7 view .LVU118
 432 011e 1342     		tst	r3, r2
 433 0120 06D0     		beq	.L26
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 434              		.loc 1 166 13 view .LVU119
 435 0122 6B68     		ldr	r3, [r5, #4]
 436 0124 1340     		ands	r3, r2
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 437              		.loc 1 166 8 view .LVU120
 438 0126 082B     		cmp	r3, #8
 439 0128 10D1     		bne	.L27
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 440              		.loc 1 166 82 discriminator 1 view .LVU121
 441 012a 6B68     		ldr	r3, [r5, #4]
 166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 442              		.loc 1 166 78 discriminator 1 view .LVU122
 443 012c DB03     		lsls	r3, r3, #15
 444 012e 0DD4     		bmi	.L27
 445              	.L26:
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 446              		.loc 1 169 7 is_stmt 1 view .LVU123
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 447              		.loc 1 169 11 is_stmt 0 view .LVU124
 448 0130 2B68     		ldr	r3, [r5]
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 449              		.loc 1 169 9 view .LVU125
 450 0132 9B07     		lsls	r3, r3, #30
 451 0134 02D5     		bpl	.L106
 169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 452              		.loc 1 169 57 discriminator 1 view .LVU126
 453 0136 E368     		ldr	r3, [r4, #12]
 454 0138 012B     		cmp	r3, #1
 455 013a AAD1     		bne	.L14
 456              	.L106:
 201:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 457              		.loc 1 201 9 is_stmt 1 view .LVU127
 458 013c F821     		movs	r1, #248
 459 013e 2A68     		ldr	r2, [r5]
 460 0140 2369     		ldr	r3, [r4, #16]
 461 0142 8A43     		bics	r2, r1
 462 0144 DB00     		lsls	r3, r3, #3
 463 0146 1343     		orrs	r3, r2
 464 0148 2B60     		str	r3, [r5]
 465 014a 63E7     		b	.L25
 466              	.L27:
 183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 467              		.loc 1 183 7 view .LVU128
 183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 468              		.loc 1 183 9 is_stmt 0 view .LVU129
 469 014c E268     		ldr	r2, [r4, #12]
 470 014e 0123     		movs	r3, #1
 471 0150 002A     		cmp	r2, #0
 472 0152 0FD0     		beq	.L30
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 473              		.loc 1 186 9 is_stmt 1 view .LVU130
 474 0154 2A68     		ldr	r2, [r5]
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 475              		.loc 1 192 15 is_stmt 0 view .LVU131
 476 0156 0227     		movs	r7, #2
 186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 477              		.loc 1 186 9 view .LVU132
 478 0158 1343     		orrs	r3, r2
 479 015a 2B60     		str	r3, [r5]
 189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 480              		.loc 1 189 9 is_stmt 1 view .LVU133
 189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 481              		.loc 1 189 21 is_stmt 0 view .LVU134
 482 015c FFF7FEFF 		bl	HAL_GetTick
 483              	.LVL20:
 484 0160 0600     		movs	r6, r0
 485              	.LVL21:
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 486              		.loc 1 192 9 is_stmt 1 view .LVU135
 487              	.L31:
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 488              		.loc 1 192 51 view .LVU136
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 489              		.loc 1 192 15 is_stmt 0 view .LVU137
 490 0162 2B68     		ldr	r3, [r5]
 192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 491              		.loc 1 192 51 view .LVU138
 492 0164 3B42     		tst	r3, r7
 493 0166 E9D1     		bne	.L106
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 494              		.loc 1 194 11 is_stmt 1 view .LVU139
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 495              		.loc 1 194 15 is_stmt 0 view .LVU140
 496 0168 FFF7FEFF 		bl	HAL_GetTick
 497              	.LVL22:
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 498              		.loc 1 194 29 view .LVU141
 499 016c 801B     		subs	r0, r0, r6
 194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 500              		.loc 1 194 13 view .LVU142
 501 016e 0228     		cmp	r0, #2
 502 0170 F7D9     		bls	.L31
 503 0172 A5E7     		b	.L23
 504              	.LVL23:
 505              	.L30:
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 506              		.loc 1 206 9 is_stmt 1 view .LVU143
 507 0174 2A68     		ldr	r2, [r5]
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 508              		.loc 1 212 15 is_stmt 0 view .LVU144
 509 0176 0227     		movs	r7, #2
 206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 510              		.loc 1 206 9 view .LVU145
 511 0178 9A43     		bics	r2, r3
 512 017a 2A60     		str	r2, [r5]
 209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 513              		.loc 1 209 9 is_stmt 1 view .LVU146
 209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 514              		.loc 1 209 21 is_stmt 0 view .LVU147
 515 017c FFF7FEFF 		bl	HAL_GetTick
 516              	.LVL24:
 517 0180 0600     		movs	r6, r0
 518              	.LVL25:
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 519              		.loc 1 212 9 is_stmt 1 view .LVU148
 520              	.L33:
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 521              		.loc 1 212 51 view .LVU149
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 522              		.loc 1 212 15 is_stmt 0 view .LVU150
 523 0182 2B68     		ldr	r3, [r5]
 212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 524              		.loc 1 212 51 view .LVU151
 525 0184 3B42     		tst	r3, r7
 526 0186 00D1     		bne	.LCB439
 527 0188 44E7     		b	.L25	@long jump
 528              	.LCB439:
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 529              		.loc 1 214 11 is_stmt 1 view .LVU152
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 530              		.loc 1 214 15 is_stmt 0 view .LVU153
 531 018a FFF7FEFF 		bl	HAL_GetTick
 532              	.LVL26:
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 533              		.loc 1 214 29 view .LVU154
 534 018e 801B     		subs	r0, r0, r6
 214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 535              		.loc 1 214 13 view .LVU155
 536 0190 0228     		cmp	r0, #2
 537 0192 F6D9     		bls	.L33
 538 0194 94E7     		b	.L23
 539              	.LVL27:
 540              	.L35:
 226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 541              		.loc 1 226 5 is_stmt 1 view .LVU156
 229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 542              		.loc 1 229 5 view .LVU157
 229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 543              		.loc 1 229 7 is_stmt 0 view .LVU158
 544 0196 E269     		ldr	r2, [r4, #28]
 545 0198 0123     		movs	r3, #1
 546 019a 594D     		ldr	r5, .L111
 547 019c 002A     		cmp	r2, #0
 548 019e 10D0     		beq	.L38
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 549              		.loc 1 232 7 is_stmt 1 view .LVU159
 550 01a0 6A6A     		ldr	r2, [r5, #36]
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 551              		.loc 1 238 13 is_stmt 0 view .LVU160
 552 01a2 0227     		movs	r7, #2
 232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 553              		.loc 1 232 7 view .LVU161
 554 01a4 1343     		orrs	r3, r2
 555 01a6 6B62     		str	r3, [r5, #36]
 235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 556              		.loc 1 235 7 is_stmt 1 view .LVU162
 235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 557              		.loc 1 235 19 is_stmt 0 view .LVU163
 558 01a8 FFF7FEFF 		bl	HAL_GetTick
 559              	.LVL28:
 560 01ac 0600     		movs	r6, r0
 561              	.LVL29:
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 562              		.loc 1 238 7 is_stmt 1 view .LVU164
 563              	.L39:
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 564              		.loc 1 238 49 view .LVU165
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 565              		.loc 1 238 13 is_stmt 0 view .LVU166
 566 01ae 6B6A     		ldr	r3, [r5, #36]
 238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 567              		.loc 1 238 49 view .LVU167
 568 01b0 3B42     		tst	r3, r7
 569 01b2 00D0     		beq	.LCB476
 570 01b4 32E7     		b	.L41	@long jump
 571              	.LCB476:
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 572              		.loc 1 240 9 is_stmt 1 view .LVU168
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 573              		.loc 1 240 13 is_stmt 0 view .LVU169
 574 01b6 FFF7FEFF 		bl	HAL_GetTick
 575              	.LVL30:
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 576              		.loc 1 240 27 view .LVU170
 577 01ba 801B     		subs	r0, r0, r6
 240:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 578              		.loc 1 240 11 view .LVU171
 579 01bc 0228     		cmp	r0, #2
 580 01be F6D9     		bls	.L39
 581 01c0 7EE7     		b	.L23
 582              	.LVL31:
 583              	.L38:
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 584              		.loc 1 249 7 is_stmt 1 view .LVU172
 585 01c2 6A6A     		ldr	r2, [r5, #36]
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 586              		.loc 1 255 13 is_stmt 0 view .LVU173
 587 01c4 0227     		movs	r7, #2
 249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 588              		.loc 1 249 7 view .LVU174
 589 01c6 9A43     		bics	r2, r3
 590 01c8 6A62     		str	r2, [r5, #36]
 252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 591              		.loc 1 252 7 is_stmt 1 view .LVU175
 252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 592              		.loc 1 252 19 is_stmt 0 view .LVU176
 593 01ca FFF7FEFF 		bl	HAL_GetTick
 594              	.LVL32:
 595 01ce 0600     		movs	r6, r0
 596              	.LVL33:
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 597              		.loc 1 255 7 is_stmt 1 view .LVU177
 598              	.L42:
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 599              		.loc 1 255 49 view .LVU178
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 600              		.loc 1 255 13 is_stmt 0 view .LVU179
 601 01d0 6B6A     		ldr	r3, [r5, #36]
 255:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 602              		.loc 1 255 49 view .LVU180
 603 01d2 3B42     		tst	r3, r7
 604 01d4 00D1     		bne	.LCB505
 605 01d6 21E7     		b	.L41	@long jump
 606              	.LCB505:
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 607              		.loc 1 257 9 is_stmt 1 view .LVU181
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 608              		.loc 1 257 13 is_stmt 0 view .LVU182
 609 01d8 FFF7FEFF 		bl	HAL_GetTick
 610              	.LVL34:
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 611              		.loc 1 257 27 view .LVU183
 612 01dc 801B     		subs	r0, r0, r6
 257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 613              		.loc 1 257 11 view .LVU184
 614 01de 0228     		cmp	r0, #2
 615 01e0 F6D9     		bls	.L42
 616 01e2 6DE7     		b	.L23
 617              	.LVL35:
 618              	.L36:
 619              	.LBB12:
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 620              		.loc 1 267 5 is_stmt 1 view .LVU185
 270:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 621              		.loc 1 270 5 view .LVU186
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 622              		.loc 1 274 5 view .LVU187
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 623              		.loc 1 274 8 is_stmt 0 view .LVU188
 624 01e4 8022     		movs	r2, #128
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 625              		.loc 1 267 22 view .LVU189
 626 01e6 0021     		movs	r1, #0
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 627              		.loc 1 274 8 view .LVU190
 628 01e8 454D     		ldr	r5, .L111
 629 01ea 5205     		lsls	r2, r2, #21
 630 01ec EB69     		ldr	r3, [r5, #28]
 267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 631              		.loc 1 267 22 view .LVU191
 632 01ee 0091     		str	r1, [sp]
 274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 633              		.loc 1 274 7 view .LVU192
 634 01f0 1342     		tst	r3, r2
 635 01f2 08D1     		bne	.L45
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 636              		.loc 1 276 7 is_stmt 1 view .LVU193
 637              	.LBB13:
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 638              		.loc 1 276 7 view .LVU194
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 639              		.loc 1 276 7 view .LVU195
 640 01f4 EB69     		ldr	r3, [r5, #28]
 641 01f6 1343     		orrs	r3, r2
 642 01f8 EB61     		str	r3, [r5, #28]
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 643              		.loc 1 276 7 view .LVU196
 644 01fa EB69     		ldr	r3, [r5, #28]
 645 01fc 1340     		ands	r3, r2
 646 01fe 0393     		str	r3, [sp, #12]
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 647              		.loc 1 276 7 view .LVU197
 648 0200 039B     		ldr	r3, [sp, #12]
 649              	.LBE13:
 276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 650              		.loc 1 276 7 view .LVU198
 277:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 651              		.loc 1 277 7 view .LVU199
 652              	.LVL36:
 277:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 653              		.loc 1 277 21 is_stmt 0 view .LVU200
 654 0202 0123     		movs	r3, #1
 655 0204 0093     		str	r3, [sp]
 656              	.LVL37:
 657              	.L45:
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 658              		.loc 1 280 5 is_stmt 1 view .LVU201
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 659              		.loc 1 280 8 is_stmt 0 view .LVU202
 660 0206 8027     		movs	r7, #128
 661 0208 404E     		ldr	r6, .L111+12
 662 020a 7F00     		lsls	r7, r7, #1
 663 020c 3368     		ldr	r3, [r6]
 280:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 664              		.loc 1 280 7 view .LVU203
 665 020e 3B42     		tst	r3, r7
 666 0210 15D0     		beq	.L46
 667              	.L51:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 668              		.loc 1 298 5 is_stmt 1 view .LVU204
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 669              		.loc 1 298 5 view .LVU205
 670 0212 A368     		ldr	r3, [r4, #8]
 671 0214 012B     		cmp	r3, #1
 672 0216 22D1     		bne	.L99
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 673              		.loc 1 298 5 discriminator 1 view .LVU206
 674 0218 2A6A     		ldr	r2, [r5, #32]
 675              	.L110:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 676              		.loc 1 298 5 is_stmt 0 discriminator 7 view .LVU207
 677 021a 1343     		orrs	r3, r2
 678              	.L107:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 679              		.loc 1 298 5 discriminator 8 view .LVU208
 680 021c 2B62     		str	r3, [r5, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 681              		.loc 1 298 5 is_stmt 1 discriminator 8 view .LVU209
 300:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 682              		.loc 1 300 5 discriminator 8 view .LVU210
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 683              		.loc 1 303 7 discriminator 8 view .LVU211
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 684              		.loc 1 303 19 is_stmt 0 discriminator 8 view .LVU212
 685 021e FFF7FEFF 		bl	HAL_GetTick
 686              	.LVL38:
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 687              		.loc 1 306 13 discriminator 8 view .LVU213
 688 0222 0227     		movs	r7, #2
 303:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 689              		.loc 1 303 19 discriminator 8 view .LVU214
 690 0224 0600     		movs	r6, r0
 691              	.LVL39:
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 692              		.loc 1 306 7 is_stmt 1 discriminator 8 view .LVU215
 693              	.L56:
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 694              		.loc 1 306 49 view .LVU216
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 695              		.loc 1 306 13 is_stmt 0 view .LVU217
 696 0226 2B6A     		ldr	r3, [r5, #32]
 306:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 697              		.loc 1 306 49 view .LVU218
 698 0228 3B42     		tst	r3, r7
 699 022a 3FD0     		beq	.L57
 700              	.L60:
 330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 701              		.loc 1 330 5 is_stmt 1 view .LVU219
 330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 702              		.loc 1 330 7 is_stmt 0 view .LVU220
 703 022c 009B     		ldr	r3, [sp]
 704 022e 012B     		cmp	r3, #1
 705 0230 00D0     		beq	.LCB598
 706 0232 F7E6     		b	.L44	@long jump
 707              	.LCB598:
 332:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 708              		.loc 1 332 7 is_stmt 1 view .LVU221
 709 0234 EB69     		ldr	r3, [r5, #28]
 710 0236 364A     		ldr	r2, .L111+16
 711 0238 1340     		ands	r3, r2
 712 023a EB61     		str	r3, [r5, #28]
 713 023c F2E6     		b	.L44
 714              	.LVL40:
 715              	.L46:
 283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 716              		.loc 1 283 7 view .LVU222
 717 023e 3368     		ldr	r3, [r6]
 718 0240 3B43     		orrs	r3, r7
 719 0242 3360     		str	r3, [r6]
 286:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 720              		.loc 1 286 7 view .LVU223
 286:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 721              		.loc 1 286 19 is_stmt 0 view .LVU224
 722 0244 FFF7FEFF 		bl	HAL_GetTick
 723              	.LVL41:
 724 0248 0190     		str	r0, [sp, #4]
 725              	.LVL42:
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 726              		.loc 1 288 7 is_stmt 1 view .LVU225
 727              	.L49:
 288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 728              		.loc 1 288 13 view .LVU226
 729 024a 3368     		ldr	r3, [r6]
 730 024c 3B42     		tst	r3, r7
 731 024e E0D1     		bne	.L51
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 732              		.loc 1 290 9 view .LVU227
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 733              		.loc 1 290 13 is_stmt 0 view .LVU228
 734 0250 FFF7FEFF 		bl	HAL_GetTick
 735              	.LVL43:
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 736              		.loc 1 290 27 view .LVU229
 737 0254 019B     		ldr	r3, [sp, #4]
 738 0256 C01A     		subs	r0, r0, r3
 290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 739              		.loc 1 290 11 view .LVU230
 740 0258 6428     		cmp	r0, #100
 741 025a F6D9     		bls	.L49
 742 025c 30E7     		b	.L23
 743              	.LVL44:
 744              	.L99:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 745              		.loc 1 298 5 is_stmt 1 discriminator 2 view .LVU231
 746 025e 0122     		movs	r2, #1
 747 0260 002B     		cmp	r3, #0
 748 0262 14D1     		bne	.L53
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 749              		.loc 1 298 5 discriminator 4 view .LVU232
 750 0264 2B6A     		ldr	r3, [r5, #32]
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 751              		.loc 1 320 13 is_stmt 0 discriminator 4 view .LVU233
 752 0266 0227     		movs	r7, #2
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 753              		.loc 1 298 5 discriminator 4 view .LVU234
 754 0268 9343     		bics	r3, r2
 755 026a 2B62     		str	r3, [r5, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 756              		.loc 1 298 5 is_stmt 1 discriminator 4 view .LVU235
 757 026c 2B6A     		ldr	r3, [r5, #32]
 758 026e 0332     		adds	r2, r2, #3
 759 0270 9343     		bics	r3, r2
 760 0272 2B62     		str	r3, [r5, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 761              		.loc 1 298 5 discriminator 4 view .LVU236
 300:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 762              		.loc 1 300 5 discriminator 4 view .LVU237
 317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 763              		.loc 1 317 7 discriminator 4 view .LVU238
 317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 764              		.loc 1 317 19 is_stmt 0 discriminator 4 view .LVU239
 765 0274 FFF7FEFF 		bl	HAL_GetTick
 766              	.LVL45:
 767 0278 0600     		movs	r6, r0
 768              	.LVL46:
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 769              		.loc 1 320 7 is_stmt 1 discriminator 4 view .LVU240
 770              	.L54:
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 771              		.loc 1 320 49 view .LVU241
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 772              		.loc 1 320 13 is_stmt 0 view .LVU242
 773 027a 2B6A     		ldr	r3, [r5, #32]
 320:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 774              		.loc 1 320 49 view .LVU243
 775 027c 3B42     		tst	r3, r7
 776 027e D5D0     		beq	.L60
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 777              		.loc 1 322 9 is_stmt 1 view .LVU244
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 778              		.loc 1 322 13 is_stmt 0 view .LVU245
 779 0280 FFF7FEFF 		bl	HAL_GetTick
 780              	.LVL47:
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 781              		.loc 1 322 11 view .LVU246
 782 0284 234B     		ldr	r3, .L111+20
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 783              		.loc 1 322 27 view .LVU247
 784 0286 801B     		subs	r0, r0, r6
 322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 785              		.loc 1 322 11 view .LVU248
 786 0288 9842     		cmp	r0, r3
 787 028a F6D9     		bls	.L54
 788 028c 18E7     		b	.L23
 789              	.LVL48:
 790              	.L53:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 791              		.loc 1 298 5 is_stmt 1 discriminator 5 view .LVU249
 792 028e 052B     		cmp	r3, #5
 793 0290 05D1     		bne	.L55
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 794              		.loc 1 298 5 discriminator 7 view .LVU250
 795 0292 296A     		ldr	r1, [r5, #32]
 796 0294 013B     		subs	r3, r3, #1
 797 0296 0B43     		orrs	r3, r1
 798 0298 2B62     		str	r3, [r5, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 799              		.loc 1 298 5 discriminator 7 view .LVU251
 800 029a 2B6A     		ldr	r3, [r5, #32]
 801 029c BDE7     		b	.L110
 802              	.L55:
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 803              		.loc 1 298 5 discriminator 8 view .LVU252
 804 029e 2B6A     		ldr	r3, [r5, #32]
 805 02a0 9343     		bics	r3, r2
 806 02a2 0422     		movs	r2, #4
 807 02a4 2B62     		str	r3, [r5, #32]
 298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the LSE State */
 808              		.loc 1 298 5 discriminator 8 view .LVU253
 809 02a6 2B6A     		ldr	r3, [r5, #32]
 810 02a8 9343     		bics	r3, r2
 811 02aa B7E7     		b	.L107
 812              	.LVL49:
 813              	.L57:
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 814              		.loc 1 308 9 view .LVU254
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 815              		.loc 1 308 13 is_stmt 0 view .LVU255
 816 02ac FFF7FEFF 		bl	HAL_GetTick
 817              	.LVL50:
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 818              		.loc 1 308 11 view .LVU256
 819 02b0 184B     		ldr	r3, .L111+20
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 820              		.loc 1 308 27 view .LVU257
 821 02b2 801B     		subs	r0, r0, r6
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 822              		.loc 1 308 11 view .LVU258
 823 02b4 9842     		cmp	r0, r3
 824 02b6 B6D9     		bls	.L56
 825 02b8 02E7     		b	.L23
 826              	.LVL51:
 827              	.L65:
 308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 828              		.loc 1 308 11 view .LVU259
 829              	.LBE12:
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 830              		.loc 1 358 9 is_stmt 1 view .LVU260
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 831              		.loc 1 358 13 is_stmt 0 view .LVU261
 832 02ba FFF7FEFF 		bl	HAL_GetTick
 833              	.LVL52:
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 834              		.loc 1 358 27 view .LVU262
 835 02be 801B     		subs	r0, r0, r6
 358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 836              		.loc 1 358 11 view .LVU263
 837 02c0 0228     		cmp	r0, #2
 838 02c2 00D8     		bhi	.LCB728
 839 02c4 C1E6     		b	.L64	@long jump
 840              	.LCB728:
 841 02c6 FBE6     		b	.L23
 842              	.LVL53:
 843              	.L63:
 367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 844              		.loc 1 367 10 is_stmt 1 view .LVU264
 367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 845              		.loc 1 367 12 is_stmt 0 view .LVU265
 846 02c8 0532     		adds	r2, r2, #5
 847 02ca 03D1     		bne	.L66
 370:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 848              		.loc 1 370 7 is_stmt 1 view .LVU266
 849 02cc 6A6B     		ldr	r2, [r5, #52]
 850 02ce 9A43     		bics	r2, r3
 851 02d0 6A63     		str	r2, [r5, #52]
 852 02d2 BEE6     		b	.L108
 853              	.L66:
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 854              		.loc 1 378 7 view .LVU267
 855 02d4 6A6B     		ldr	r2, [r5, #52]
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 856              		.loc 1 387 13 is_stmt 0 view .LVU268
 857 02d6 0227     		movs	r7, #2
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 858              		.loc 1 378 7 view .LVU269
 859 02d8 1343     		orrs	r3, r2
 381:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 860              		.loc 1 381 7 view .LVU270
 861 02da 0122     		movs	r2, #1
 378:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 862              		.loc 1 378 7 view .LVU271
 863 02dc 6B63     		str	r3, [r5, #52]
 381:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 864              		.loc 1 381 7 is_stmt 1 view .LVU272
 865 02de 6B6B     		ldr	r3, [r5, #52]
 866 02e0 9343     		bics	r3, r2
 867 02e2 6B63     		str	r3, [r5, #52]
 384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 868              		.loc 1 384 7 view .LVU273
 384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 869              		.loc 1 384 19 is_stmt 0 view .LVU274
 870 02e4 FFF7FEFF 		bl	HAL_GetTick
 871              	.LVL54:
 872 02e8 0600     		movs	r6, r0
 873              	.LVL55:
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 874              		.loc 1 387 7 is_stmt 1 view .LVU275
 875              	.L67:
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 876              		.loc 1 387 51 view .LVU276
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 877              		.loc 1 387 13 is_stmt 0 view .LVU277
 878 02ea 6B6B     		ldr	r3, [r5, #52]
 387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 879              		.loc 1 387 51 view .LVU278
 880 02ec 3B42     		tst	r3, r7
 881 02ee 00D1     		bne	.LCB767
 882 02f0 B6E6     		b	.L62	@long jump
 883              	.LCB767:
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 884              		.loc 1 389 9 is_stmt 1 view .LVU279
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 885              		.loc 1 389 13 is_stmt 0 view .LVU280
 886 02f2 FFF7FEFF 		bl	HAL_GetTick
 887              	.LVL56:
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 888              		.loc 1 389 27 view .LVU281
 889 02f6 801B     		subs	r0, r0, r6
 389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 890              		.loc 1 389 11 view .LVU282
 891 02f8 0228     		cmp	r0, #2
 892 02fa F6D9     		bls	.L67
 893 02fc E0E6     		b	.L23
 894              	.L112:
 895 02fe C046     		.align	2
 896              	.L111:
 897 0300 00100240 		.word	1073876992
 898 0304 FFFFFEFF 		.word	-65537
 899 0308 FFFFFBFF 		.word	-262145
 900 030c 00700040 		.word	1073770496
 901 0310 FFFFFFEF 		.word	-268435457
 902 0314 88130000 		.word	5000
 903              	.LVL57:
 904              	.L70:
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 905              		.loc 1 460 5 is_stmt 1 view .LVU283
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 906              		.loc 1 460 8 is_stmt 0 view .LVU284
 907 0318 0C22     		movs	r2, #12
 908 031a 254D     		ldr	r5, .L113
 909 031c 6B68     		ldr	r3, [r5, #4]
 910 031e 1340     		ands	r3, r2
 460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     { 
 911              		.loc 1 460 7 view .LVU285
 912 0320 082B     		cmp	r3, #8
 913 0322 00D1     		bne	.LCB797
 914 0324 B5E6     		b	.L14	@long jump
 915              	.LCB797:
 462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 916              		.loc 1 462 7 is_stmt 1 view .LVU286
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 917              		.loc 1 470 9 is_stmt 0 view .LVU287
 918 0326 2B68     		ldr	r3, [r5]
 919 0328 224A     		ldr	r2, .L113+4
 920 032a 1340     		ands	r3, r2
 921 032c 2B60     		str	r3, [r5]
 462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 922              		.loc 1 462 9 view .LVU288
 923 032e 0229     		cmp	r1, #2
 924 0330 2FD1     		bne	.L71
 465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 925              		.loc 1 465 9 is_stmt 1 view .LVU289
 466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 926              		.loc 1 466 9 view .LVU290
 467:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 927              		.loc 1 467 9 view .LVU291
 470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 928              		.loc 1 470 9 view .LVU292
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 929              		.loc 1 473 9 view .LVU293
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 930              		.loc 1 473 21 is_stmt 0 view .LVU294
 931 0332 FFF7FEFF 		bl	HAL_GetTick
 932              	.LVL58:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 933              		.loc 1 476 15 view .LVU295
 934 0336 8027     		movs	r7, #128
 473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 935              		.loc 1 473 21 view .LVU296
 936 0338 0600     		movs	r6, r0
 937              	.LVL59:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 938              		.loc 1 476 9 is_stmt 1 view .LVU297
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 939              		.loc 1 476 15 is_stmt 0 view .LVU298
 940 033a BF04     		lsls	r7, r7, #18
 941              	.LVL60:
 942              	.L72:
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 943              		.loc 1 476 52 is_stmt 1 view .LVU299
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 944              		.loc 1 476 15 is_stmt 0 view .LVU300
 945 033c 2B68     		ldr	r3, [r5]
 476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 946              		.loc 1 476 52 view .LVU301
 947 033e 3B42     		tst	r3, r7
 948 0340 21D1     		bne	.L73
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 949              		.loc 1 485 9 is_stmt 1 view .LVU302
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 950              		.loc 1 485 9 view .LVU303
 951 0342 0F22     		movs	r2, #15
 952 0344 EB6A     		ldr	r3, [r5, #44]
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 953              		.loc 1 495 15 is_stmt 0 view .LVU304
 954 0346 8026     		movs	r6, #128
 955              	.LVL61:
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 956              		.loc 1 485 9 view .LVU305
 957 0348 9343     		bics	r3, r2
 958 034a E26A     		ldr	r2, [r4, #44]
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 959              		.loc 1 495 15 view .LVU306
 960 034c B604     		lsls	r6, r6, #18
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 961              		.loc 1 485 9 view .LVU307
 962 034e 1343     		orrs	r3, r2
 963 0350 EB62     		str	r3, [r5, #44]
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 964              		.loc 1 485 9 is_stmt 1 view .LVU308
 965 0352 616A     		ldr	r1, [r4, #36]
 966 0354 A36A     		ldr	r3, [r4, #40]
 967 0356 6A68     		ldr	r2, [r5, #4]
 968 0358 0B43     		orrs	r3, r1
 969 035a 1749     		ldr	r1, .L113+8
 970 035c 0A40     		ands	r2, r1
 971 035e 1343     		orrs	r3, r2
 972 0360 6B60     		str	r3, [r5, #4]
 485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 973              		.loc 1 485 9 view .LVU309
 489:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 974              		.loc 1 489 9 view .LVU310
 975 0362 8023     		movs	r3, #128
 976 0364 2A68     		ldr	r2, [r5]
 977 0366 5B04     		lsls	r3, r3, #17
 978 0368 1343     		orrs	r3, r2
 979 036a 2B60     		str	r3, [r5]
 492:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 980              		.loc 1 492 9 view .LVU311
 492:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 981              		.loc 1 492 21 is_stmt 0 view .LVU312
 982 036c FFF7FEFF 		bl	HAL_GetTick
 983              	.LVL62:
 984 0370 0400     		movs	r4, r0
 985              	.LVL63:
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 986              		.loc 1 495 9 is_stmt 1 view .LVU313
 987              	.L74:
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 988              		.loc 1 495 52 view .LVU314
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 989              		.loc 1 495 15 is_stmt 0 view .LVU315
 990 0372 2B68     		ldr	r3, [r5]
 495:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 991              		.loc 1 495 52 view .LVU316
 992 0374 3342     		tst	r3, r6
 993 0376 00D0     		beq	.LCB864
 994 0378 76E6     		b	.L76	@long jump
 995              	.LCB864:
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 996              		.loc 1 497 11 is_stmt 1 view .LVU317
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 997              		.loc 1 497 15 is_stmt 0 view .LVU318
 998 037a FFF7FEFF 		bl	HAL_GetTick
 999              	.LVL64:
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1000              		.loc 1 497 29 view .LVU319
 1001 037e 001B     		subs	r0, r0, r4
 497:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1002              		.loc 1 497 13 view .LVU320
 1003 0380 0228     		cmp	r0, #2
 1004 0382 F6D9     		bls	.L74
 1005 0384 9CE6     		b	.L23
 1006              	.LVL65:
 1007              	.L73:
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1008              		.loc 1 478 11 is_stmt 1 view .LVU321
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1009              		.loc 1 478 15 is_stmt 0 view .LVU322
 1010 0386 FFF7FEFF 		bl	HAL_GetTick
 1011              	.LVL66:
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1012              		.loc 1 478 29 view .LVU323
 1013 038a 801B     		subs	r0, r0, r6
 478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1014              		.loc 1 478 13 view .LVU324
 1015 038c 0228     		cmp	r0, #2
 1016 038e D5D9     		bls	.L72
 1017 0390 96E6     		b	.L23
 1018              	.LVL67:
 1019              	.L71:
 506:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  
 1020              		.loc 1 506 9 is_stmt 1 view .LVU325
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1021              		.loc 1 509 9 view .LVU326
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1022              		.loc 1 509 21 is_stmt 0 view .LVU327
 1023 0392 FFF7FEFF 		bl	HAL_GetTick
 1024              	.LVL68:
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1025              		.loc 1 512 15 view .LVU328
 1026 0396 8026     		movs	r6, #128
 509:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1027              		.loc 1 509 21 view .LVU329
 1028 0398 0400     		movs	r4, r0
 1029              	.LVL69:
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1030              		.loc 1 512 9 is_stmt 1 view .LVU330
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1031              		.loc 1 512 15 is_stmt 0 view .LVU331
 1032 039a B604     		lsls	r6, r6, #18
 1033              	.LVL70:
 1034              	.L77:
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1035              		.loc 1 512 52 is_stmt 1 view .LVU332
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1036              		.loc 1 512 15 is_stmt 0 view .LVU333
 1037 039c 2B68     		ldr	r3, [r5]
 512:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1038              		.loc 1 512 52 view .LVU334
 1039 039e 3342     		tst	r3, r6
 1040 03a0 00D1     		bne	.LCB904
 1041 03a2 61E6     		b	.L76	@long jump
 1042              	.LCB904:
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1043              		.loc 1 514 11 is_stmt 1 view .LVU335
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1044              		.loc 1 514 15 is_stmt 0 view .LVU336
 1045 03a4 FFF7FEFF 		bl	HAL_GetTick
 1046              	.LVL71:
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1047              		.loc 1 514 29 view .LVU337
 1048 03a8 001B     		subs	r0, r0, r4
 514:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1049              		.loc 1 514 13 view .LVU338
 1050 03aa 0228     		cmp	r0, #2
 1051 03ac F6D9     		bls	.L77
 1052 03ae 87E6     		b	.L23
 1053              	.L114:
 1054              		.align	2
 1055              	.L113:
 1056 03b0 00100240 		.word	1073876992
 1057 03b4 FFFFFFFE 		.word	-16777217
 1058 03b8 FFFFC2FF 		.word	-3997697
 1059              		.cfi_endproc
 1060              	.LFE41:
 1062              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1063              		.align	1
 1064              		.global	HAL_RCC_ClockConfig
 1065              		.syntax unified
 1066              		.code	16
 1067              		.thumb_func
 1069              	HAL_RCC_ClockConfig:
 1070              	.LVL72:
 1071              	.LFB42:
 529:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 530:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
 531:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 532:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         parameters in the RCC_ClkInitStruct.
 533:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 534:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         contains the configuration information for the RCC peripheral.
 535:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  FLatency FLASH Latency                   
 536:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *          The value of this parameter depend on device used within the same series
 537:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 538:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 539:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
 540:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 541:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 542:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         of failure of the HSE used directly or indirectly as system clock
 543:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         (if the Clock Security System CSS is enabled).
 544:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *           
 545:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   A switch from one clock source to another occurs only if the target
 546:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 547:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         If a clock source which is not yet ready is selected, the switch will
 548:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         occur when the clock source will be ready. 
 549:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 550:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         currently used as system clock source.
 551:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
 552:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
 553:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1072              		.loc 1 554 1 is_stmt 1 view -0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 8
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 555:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1076              		.loc 1 555 3 view .LVU340
 556:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 557:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 558:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(RCC_ClkInitStruct != NULL);
 1077              		.loc 1 558 3 view .LVU341
 559:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 1078              		.loc 1 559 3 view .LVU342
 560:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1079              		.loc 1 560 3 view .LVU343
 561:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 562:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 563:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   must be correctly programmed according to the frequency of the CPU clock 
 564:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     (HCLK) of the device. */
 565:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 566:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 567:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 1080              		.loc 1 567 3 view .LVU344
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1081              		.loc 1 554 1 is_stmt 0 view .LVU345
 1082 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1083              	.LCFI2:
 1084              		.cfi_def_cfa_offset 32
 1085              		.cfi_offset 0, -32
 1086              		.cfi_offset 1, -28
 1087              		.cfi_offset 2, -24
 1088              		.cfi_offset 4, -20
 1089              		.cfi_offset 5, -16
 1090              		.cfi_offset 6, -12
 1091              		.cfi_offset 7, -8
 1092              		.cfi_offset 14, -4
 1093              		.loc 1 567 29 view .LVU346
 1094 0002 0122     		movs	r2, #1
 1095              		.loc 1 567 23 view .LVU347
 1096 0004 3E4D     		ldr	r5, .L156
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1097              		.loc 1 554 1 view .LVU348
 1098 0006 0400     		movs	r4, r0
 1099              		.loc 1 567 23 view .LVU349
 1100 0008 2B68     		ldr	r3, [r5]
 554:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1101              		.loc 1 554 1 view .LVU350
 1102 000a 0F00     		movs	r7, r1
 1103              		.loc 1 567 29 view .LVU351
 1104 000c 1340     		ands	r3, r2
 1105              		.loc 1 567 5 view .LVU352
 1106 000e 8B42     		cmp	r3, r1
 1107 0010 12D3     		bcc	.L116
 1108              	.L119:
 568:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {    
 569:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 570:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 571:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 572:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 573:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 575:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 576:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_ERROR;
 577:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 578:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 579:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 580:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 581:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1109              		.loc 1 581 3 is_stmt 1 view .LVU353
 1110              		.loc 1 581 25 is_stmt 0 view .LVU354
 1111 0012 2268     		ldr	r2, [r4]
 1112              		.loc 1 581 5 view .LVU355
 1113 0014 9307     		lsls	r3, r2, #30
 1114 0016 19D4     		bmi	.L117
 1115              	.LVL73:
 1116              	.L118:
 582:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 583:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 585:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 586:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 587:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 588:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1117              		.loc 1 588 3 is_stmt 1 view .LVU356
 1118              		.loc 1 588 5 is_stmt 0 view .LVU357
 1119 0018 D207     		lsls	r2, r2, #31
 1120 001a 1FD4     		bmi	.L121
 1121              	.LVL74:
 1122              	.L131:
 589:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {    
 590:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 591:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 592:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* HSE is selected as System Clock Source */
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 594:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 595:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSE ready flag */  
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 597:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 598:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 599:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 600:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 601:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* PLL is selected as System Clock Source */
 602:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 603:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 604:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the PLL ready flag */  
 605:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 606:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 607:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 608:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 609:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 610:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(RCC_CFGR_SWS_HSI48)
 611:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* HSI48 is selected as System Clock Source */
 612:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 613:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 614:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI48 ready flag */
 615:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 616:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 617:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 618:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 619:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 620:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 621:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* HSI is selected as System Clock Source */
 622:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 623:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 624:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Check the HSI ready flag */  
 625:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 626:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 627:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_ERROR;
 628:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 629:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 630:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 631:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 632:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Get Start Tick */
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 634:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 636:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 638:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 640:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 641:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 642:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 643:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 644:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 645:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 646:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 648:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 650:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 651:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 652:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 653:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 654:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 655:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(RCC_CFGR_SWS_HSI48)
 656:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 657:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 658:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI48)
 659:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 660:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 661:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 662:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 663:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 664:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 665:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 666:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 667:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     else
 668:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 670:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 672:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 673:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 674:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 675:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 676:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }      
 677:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }    
 678:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 679:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 1123              		.loc 1 679 3 is_stmt 1 view .LVU358
 1124              		.loc 1 679 29 is_stmt 0 view .LVU359
 1125 001c 0123     		movs	r3, #1
 1126              		.loc 1 679 23 view .LVU360
 1127 001e 2A68     		ldr	r2, [r5]
 1128              		.loc 1 679 29 view .LVU361
 1129 0020 1A40     		ands	r2, r3
 1130              		.loc 1 679 5 view .LVU362
 1131 0022 BA42     		cmp	r2, r7
 1132 0024 5DD8     		bhi	.L122
 1133              	.L123:
 680:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {    
 681:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 682:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 683:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 684:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 685:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 687:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 688:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_ERROR;
 689:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 690:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }    
 691:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 692:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 693:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1134              		.loc 1 693 3 is_stmt 1 view .LVU363
 1135              		.loc 1 693 38 is_stmt 0 view .LVU364
 1136 0026 2368     		ldr	r3, [r4]
 1137              		.loc 1 693 5 view .LVU365
 1138 0028 5B07     		lsls	r3, r3, #29
 1139 002a 61D4     		bmi	.L137
 1140              	.L138:
 694:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 695:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 696:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 697:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 698:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 699:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Update the SystemCoreClock global variable */
 700:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   //SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_
 701:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   SystemCoreClock = 7372800;
 1141              		.loc 1 701 3 is_stmt 1 view .LVU366
 1142              		.loc 1 701 19 is_stmt 0 view .LVU367
 1143 002c E122     		movs	r2, #225
 1144 002e 354B     		ldr	r3, .L156+4
 1145 0030 D203     		lsls	r2, r2, #15
 702:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 703:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure the source of time base considering new system clocks settings*/
 704:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   //HAL_InitTick (TICK_INT_PRIORITY);
 705:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 706:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 1146              		.loc 1 706 10 view .LVU368
 1147 0032 0020     		movs	r0, #0
 701:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1148              		.loc 1 701 19 view .LVU369
 1149 0034 1A60     		str	r2, [r3]
 1150              		.loc 1 706 3 is_stmt 1 view .LVU370
 1151              		.loc 1 706 10 is_stmt 0 view .LVU371
 1152 0036 08E0     		b	.L120
 1153              	.LVL75:
 1154              	.L116:
 570:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1155              		.loc 1 570 5 is_stmt 1 view .LVU372
 1156 0038 2B68     		ldr	r3, [r5]
 1157 003a 9343     		bics	r3, r2
 1158 003c 0B43     		orrs	r3, r1
 1159 003e 2B60     		str	r3, [r5]
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1160              		.loc 1 574 5 view .LVU373
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1161              		.loc 1 574 14 is_stmt 0 view .LVU374
 1162 0040 2B68     		ldr	r3, [r5]
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1163              		.loc 1 574 20 view .LVU375
 1164 0042 1340     		ands	r3, r2
 574:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1165              		.loc 1 574 7 view .LVU376
 1166 0044 8B42     		cmp	r3, r1
 1167 0046 E4D0     		beq	.L119
 1168              	.LVL76:
 1169              	.L125:
 576:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 1170              		.loc 1 576 14 view .LVU377
 1171 0048 0120     		movs	r0, #1
 1172              	.L120:
 707:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1173              		.loc 1 707 1 view .LVU378
 1174              		@ sp needed
 1175              	.LVL77:
 1176              	.LVL78:
 1177              		.loc 1 707 1 view .LVU379
 1178 004a FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 1179              	.LVL79:
 1180              	.L117:
 583:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1181              		.loc 1 583 5 is_stmt 1 view .LVU380
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1182              		.loc 1 584 5 view .LVU381
 1183 004c F020     		movs	r0, #240
 1184              	.LVL80:
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1185              		.loc 1 584 5 is_stmt 0 view .LVU382
 1186 004e 2E49     		ldr	r1, .L156+8
 1187              	.LVL81:
 584:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1188              		.loc 1 584 5 view .LVU383
 1189 0050 4B68     		ldr	r3, [r1, #4]
 1190 0052 8343     		bics	r3, r0
 1191 0054 A068     		ldr	r0, [r4, #8]
 1192 0056 0343     		orrs	r3, r0
 1193 0058 4B60     		str	r3, [r1, #4]
 1194 005a DDE7     		b	.L118
 1195              	.L121:
 590:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1196              		.loc 1 590 5 is_stmt 1 view .LVU384
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1197              		.loc 1 593 5 view .LVU385
 1198 005c 2A4E     		ldr	r6, .L156+8
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1199              		.loc 1 593 25 is_stmt 0 view .LVU386
 1200 005e 6268     		ldr	r2, [r4, #4]
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1201              		.loc 1 596 10 view .LVU387
 1202 0060 3368     		ldr	r3, [r6]
 593:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1203              		.loc 1 593 7 view .LVU388
 1204 0062 012A     		cmp	r2, #1
 1205 0064 1AD1     		bne	.L124
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1206              		.loc 1 596 7 is_stmt 1 view .LVU389
 596:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1207              		.loc 1 596 9 is_stmt 0 view .LVU390
 1208 0066 9B03     		lsls	r3, r3, #14
 1209 0068 EED5     		bpl	.L125
 1210              	.L126:
 630:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1211              		.loc 1 630 5 is_stmt 1 view .LVU391
 1212 006a 0321     		movs	r1, #3
 1213 006c 7368     		ldr	r3, [r6, #4]
 1214 006e 8B43     		bics	r3, r1
 1215 0070 1343     		orrs	r3, r2
 1216 0072 7360     		str	r3, [r6, #4]
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1217              		.loc 1 633 5 view .LVU392
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1218              		.loc 1 633 17 is_stmt 0 view .LVU393
 1219 0074 FFF7FEFF 		bl	HAL_GetTick
 1220              	.LVL82:
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1221              		.loc 1 635 25 view .LVU394
 1222 0078 6368     		ldr	r3, [r4, #4]
 633:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1223              		.loc 1 633 17 view .LVU395
 1224 007a 0190     		str	r0, [sp, #4]
 1225              	.LVL83:
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1226              		.loc 1 635 5 is_stmt 1 view .LVU396
 635:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1227              		.loc 1 635 7 is_stmt 0 view .LVU397
 1228 007c 012B     		cmp	r3, #1
 1229 007e 15D1     		bne	.L151
 1230              	.LVL84:
 1231              	.L128:
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1232              		.loc 1 637 44 is_stmt 1 view .LVU398
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1233              		.loc 1 637 14 is_stmt 0 view .LVU399
 1234 0080 0C22     		movs	r2, #12
 1235 0082 7368     		ldr	r3, [r6, #4]
 1236 0084 1340     		ands	r3, r2
 637:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1237              		.loc 1 637 44 view .LVU400
 1238 0086 042B     		cmp	r3, #4
 1239 0088 C8D0     		beq	.L131
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1240              		.loc 1 639 9 is_stmt 1 view .LVU401
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1241              		.loc 1 639 13 is_stmt 0 view .LVU402
 1242 008a FFF7FEFF 		bl	HAL_GetTick
 1243              	.LVL85:
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1244              		.loc 1 639 27 view .LVU403
 1245 008e 019B     		ldr	r3, [sp, #4]
 1246 0090 C01A     		subs	r0, r0, r3
 639:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1247              		.loc 1 639 11 view .LVU404
 1248 0092 1E4B     		ldr	r3, .L156+12
 1249 0094 9842     		cmp	r0, r3
 1250 0096 F3D9     		bls	.L128
 1251              	.L134:
 641:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1252              		.loc 1 641 18 view .LVU405
 1253 0098 0320     		movs	r0, #3
 1254 009a D6E7     		b	.L120
 1255              	.LVL86:
 1256              	.L124:
 602:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1257              		.loc 1 602 10 is_stmt 1 view .LVU406
 602:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1258              		.loc 1 602 12 is_stmt 0 view .LVU407
 1259 009c 022A     		cmp	r2, #2
 1260 009e 02D1     		bne	.L127
 605:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1261              		.loc 1 605 7 is_stmt 1 view .LVU408
 605:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1262              		.loc 1 605 9 is_stmt 0 view .LVU409
 1263 00a0 9B01     		lsls	r3, r3, #6
 1264 00a2 E2D4     		bmi	.L126
 1265 00a4 D0E7     		b	.L125
 1266              	.L127:
 625:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1267              		.loc 1 625 7 is_stmt 1 view .LVU410
 625:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1268              		.loc 1 625 9 is_stmt 0 view .LVU411
 1269 00a6 9B07     		lsls	r3, r3, #30
 1270 00a8 DFD4     		bmi	.L126
 1271 00aa CDE7     		b	.L125
 1272              	.LVL87:
 1273              	.L151:
 645:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1274              		.loc 1 645 10 is_stmt 1 view .LVU412
 645:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1275              		.loc 1 645 12 is_stmt 0 view .LVU413
 1276 00ac 022B     		cmp	r3, #2
 1277 00ae 12D0     		beq	.L132
 1278              	.LVL88:
 1279              	.L133:
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1280              		.loc 1 669 44 is_stmt 1 view .LVU414
 1281 00b0 0C22     		movs	r2, #12
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1282              		.loc 1 669 14 is_stmt 0 view .LVU415
 1283 00b2 7368     		ldr	r3, [r6, #4]
 669:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1284              		.loc 1 669 44 view .LVU416
 1285 00b4 1342     		tst	r3, r2
 1286 00b6 B1D0     		beq	.L131
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1287              		.loc 1 671 9 is_stmt 1 view .LVU417
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1288              		.loc 1 671 13 is_stmt 0 view .LVU418
 1289 00b8 FFF7FEFF 		bl	HAL_GetTick
 1290              	.LVL89:
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1291              		.loc 1 671 27 view .LVU419
 1292 00bc 019B     		ldr	r3, [sp, #4]
 1293 00be C01A     		subs	r0, r0, r3
 671:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1294              		.loc 1 671 11 view .LVU420
 1295 00c0 124B     		ldr	r3, .L156+12
 1296 00c2 9842     		cmp	r0, r3
 1297 00c4 F4D9     		bls	.L133
 1298 00c6 E7E7     		b	.L134
 1299              	.L135:
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1300              		.loc 1 649 9 is_stmt 1 view .LVU421
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1301              		.loc 1 649 13 is_stmt 0 view .LVU422
 1302 00c8 FFF7FEFF 		bl	HAL_GetTick
 1303              	.LVL90:
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1304              		.loc 1 649 27 view .LVU423
 1305 00cc 019B     		ldr	r3, [sp, #4]
 1306 00ce C01A     		subs	r0, r0, r3
 649:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1307              		.loc 1 649 11 view .LVU424
 1308 00d0 0E4B     		ldr	r3, .L156+12
 1309 00d2 9842     		cmp	r0, r3
 1310 00d4 E0D8     		bhi	.L134
 1311              	.L132:
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1312              		.loc 1 647 44 is_stmt 1 view .LVU425
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1313              		.loc 1 647 14 is_stmt 0 view .LVU426
 1314 00d6 0C22     		movs	r2, #12
 1315 00d8 7368     		ldr	r3, [r6, #4]
 1316 00da 1340     		ands	r3, r2
 647:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1317              		.loc 1 647 44 view .LVU427
 1318 00dc 082B     		cmp	r3, #8
 1319 00de F3D1     		bne	.L135
 1320 00e0 9CE7     		b	.L131
 1321              	.LVL91:
 1322              	.L122:
 682:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1323              		.loc 1 682 5 is_stmt 1 view .LVU428
 1324 00e2 2A68     		ldr	r2, [r5]
 1325 00e4 9A43     		bics	r2, r3
 1326 00e6 2A60     		str	r2, [r5]
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1327              		.loc 1 686 5 view .LVU429
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1328              		.loc 1 686 14 is_stmt 0 view .LVU430
 1329 00e8 2A68     		ldr	r2, [r5]
 686:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1330              		.loc 1 686 7 view .LVU431
 1331 00ea 1A42     		tst	r2, r3
 1332 00ec 9BD0     		beq	.L123
 1333 00ee ABE7     		b	.L125
 1334              	.L137:
 695:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 1335              		.loc 1 695 5 is_stmt 1 view .LVU432
 696:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1336              		.loc 1 696 5 view .LVU433
 1337 00f0 054A     		ldr	r2, .L156+8
 1338 00f2 0749     		ldr	r1, .L156+16
 1339 00f4 5368     		ldr	r3, [r2, #4]
 1340 00f6 0B40     		ands	r3, r1
 1341 00f8 E168     		ldr	r1, [r4, #12]
 1342 00fa 0B43     		orrs	r3, r1
 1343 00fc 5360     		str	r3, [r2, #4]
 1344 00fe 95E7     		b	.L138
 1345              	.L157:
 1346              		.align	2
 1347              	.L156:
 1348 0100 00200240 		.word	1073881088
 1349 0104 00000000 		.word	.LANCHOR1
 1350 0108 00100240 		.word	1073876992
 1351 010c 88130000 		.word	5000
 1352 0110 FFF8FFFF 		.word	-1793
 1353              		.cfi_endproc
 1354              	.LFE42:
 1356              		.section	.text.HAL_RCCEx_PeriphCLKConfig,"ax",%progbits
 1357              		.align	1
 1358              		.global	HAL_RCCEx_PeriphCLKConfig
 1359              		.syntax unified
 1360              		.code	16
 1361              		.thumb_func
 1363              	HAL_RCCEx_PeriphCLKConfig:
 1364              	.LVL92:
 1365              	.LFB43:
 708:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 709:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
 710:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 1366              		.loc 1 710 1 view -0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 16
 1369              		@ frame_needed = 0, uses_anonymous_args = 0
 711:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1370              		.loc 1 711 3 view .LVU435
 712:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t temp_reg = 0U;
 1371              		.loc 1 712 3 view .LVU436
 713:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 714:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 715:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));
 1372              		.loc 1 715 3 view .LVU437
 716:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 717:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*---------------------------- RTC configuration -------------------------------*/
 718:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 1373              		.loc 1 718 3 view .LVU438
 710:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1374              		.loc 1 710 1 is_stmt 0 view .LVU439
 1375 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1376              	.LCFI3:
 1377              		.cfi_def_cfa_offset 20
 1378              		.cfi_offset 4, -20
 1379              		.cfi_offset 5, -16
 1380              		.cfi_offset 6, -12
 1381              		.cfi_offset 7, -8
 1382              		.cfi_offset 14, -4
 1383              		.loc 1 718 45 view .LVU440
 1384 0002 0368     		ldr	r3, [r0]
 710:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1385              		.loc 1 710 1 view .LVU441
 1386 0004 0500     		movs	r5, r0
 1387 0006 85B0     		sub	sp, sp, #20
 1388              	.LCFI4:
 1389              		.cfi_def_cfa_offset 40
 1390              		.loc 1 718 5 view .LVU442
 1391 0008 DB03     		lsls	r3, r3, #15
 1392 000a 2BD5     		bpl	.L160
 1393              	.LBB14:
 719:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 720:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* check for RTC Parameters used to output RTCCLK */
 721:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));
 1394              		.loc 1 721 5 is_stmt 1 view .LVU443
 722:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 723:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     FlagStatus       pwrclkchanged = RESET;
 1395              		.loc 1 723 5 view .LVU444
 1396              	.LVL93:
 724:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 725:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* As soon as function is called to change RTC clock source, activation of the 
 726:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        power domain is done. */
 727:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Requires to enable write access to Backup Domain of necessary */
 728:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 1397              		.loc 1 728 5 view .LVU445
 1398              		.loc 1 728 8 is_stmt 0 view .LVU446
 1399 000c 8022     		movs	r2, #128
 723:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1400              		.loc 1 723 22 view .LVU447
 1401 000e 0021     		movs	r1, #0
 1402              		.loc 1 728 8 view .LVU448
 1403 0010 384C     		ldr	r4, .L188
 1404 0012 5205     		lsls	r2, r2, #21
 1405 0014 E369     		ldr	r3, [r4, #28]
 723:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1406              		.loc 1 723 22 view .LVU449
 1407 0016 0091     		str	r1, [sp]
 1408              		.loc 1 728 7 view .LVU450
 1409 0018 1342     		tst	r3, r2
 1410 001a 08D1     		bne	.L161
 729:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 730:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 1411              		.loc 1 730 5 is_stmt 1 view .LVU451
 1412              	.LBB15:
 1413              		.loc 1 730 5 view .LVU452
 1414              		.loc 1 730 5 view .LVU453
 1415 001c E369     		ldr	r3, [r4, #28]
 1416 001e 1343     		orrs	r3, r2
 1417 0020 E361     		str	r3, [r4, #28]
 1418              		.loc 1 730 5 view .LVU454
 1419 0022 E369     		ldr	r3, [r4, #28]
 1420 0024 1340     		ands	r3, r2
 1421 0026 0393     		str	r3, [sp, #12]
 1422              		.loc 1 730 5 view .LVU455
 1423 0028 039B     		ldr	r3, [sp, #12]
 1424              	.LBE15:
 1425              		.loc 1 730 5 view .LVU456
 731:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       pwrclkchanged = SET;
 1426              		.loc 1 731 7 view .LVU457
 1427              	.LVL94:
 1428              		.loc 1 731 21 is_stmt 0 view .LVU458
 1429 002a 0123     		movs	r3, #1
 1430 002c 0093     		str	r3, [sp]
 1431              	.LVL95:
 1432              	.L161:
 732:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 733:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 734:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 1433              		.loc 1 734 5 is_stmt 1 view .LVU459
 1434              		.loc 1 734 8 is_stmt 0 view .LVU460
 1435 002e 8027     		movs	r7, #128
 1436 0030 314E     		ldr	r6, .L188+4
 1437 0032 7F00     		lsls	r7, r7, #1
 1438 0034 3368     		ldr	r3, [r6]
 1439              		.loc 1 734 7 view .LVU461
 1440 0036 3B42     		tst	r3, r7
 1441 0038 22D0     		beq	.L162
 1442              	.LVL96:
 1443              	.L168:
 735:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 736:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Enable write access to Backup domain */
 737:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 738:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 739:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait for Backup domain Write protection disable */
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 741:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 743:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 745:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 746:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           return HAL_TIMEOUT;
 747:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 748:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 749:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 750:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 751:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value 
 752:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     temp_reg = (RCC->BDCR & RCC_BDCR_RTCSEL);
 1444              		.loc 1 752 5 is_stmt 1 view .LVU462
 1445              		.loc 1 752 20 is_stmt 0 view .LVU463
 1446 003a 216A     		ldr	r1, [r4, #32]
 1447              		.loc 1 752 14 view .LVU464
 1448 003c C022     		movs	r2, #192
 1449 003e 0800     		movs	r0, r1
 1450 0040 9200     		lsls	r2, r2, #2
 753:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
 1451              		.loc 1 753 64 view .LVU465
 1452 0042 6B68     		ldr	r3, [r5, #4]
 1453 0044 2D4E     		ldr	r6, .L188+8
 752:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((temp_reg != 0x00000000U) && (temp_reg != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSE
 1454              		.loc 1 752 14 view .LVU466
 1455 0046 1040     		ands	r0, r2
 1456              	.LVL97:
 1457              		.loc 1 753 5 is_stmt 1 view .LVU467
 1458              		.loc 1 753 7 is_stmt 0 view .LVU468
 1459 0048 1142     		tst	r1, r2
 1460 004a 2BD1     		bne	.L163
 1461              	.LVL98:
 1462              	.L164:
 754:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 755:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Store the content of BDCR register before the reset of Backup Domain */
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       temp_reg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 757:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_FORCE();
 759:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 760:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Restore the Content of BDCR register */
 761:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       RCC->BDCR = temp_reg;
 762:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 763:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait for LSERDY if LSE was enabled */
 764:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if (HAL_IS_BIT_SET(temp_reg, RCC_BDCR_LSEON))
 765:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 766:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Get Start Tick */
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 768:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 769:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Wait till LSE is ready */  
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 771:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 773:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 774:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****             return HAL_TIMEOUT;
 775:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           }
 776:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 777:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 778:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 779:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 1463              		.loc 1 779 5 is_stmt 1 view .LVU469
 1464 004c 236A     		ldr	r3, [r4, #32]
 1465 004e 6A68     		ldr	r2, [r5, #4]
 1466 0050 3340     		ands	r3, r6
 1467 0052 1343     		orrs	r3, r2
 1468 0054 2362     		str	r3, [r4, #32]
 780:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 781:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Require to disable power clock if necessary */
 782:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(pwrclkchanged == SET)
 1469              		.loc 1 782 5 view .LVU470
 1470              		.loc 1 782 7 is_stmt 0 view .LVU471
 1471 0056 009B     		ldr	r3, [sp]
 1472 0058 012B     		cmp	r3, #1
 1473 005a 03D1     		bne	.L160
 783:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 784:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1474              		.loc 1 784 7 is_stmt 1 view .LVU472
 1475 005c E369     		ldr	r3, [r4, #28]
 1476 005e 284A     		ldr	r2, .L188+12
 1477 0060 1340     		ands	r3, r2
 1478 0062 E361     		str	r3, [r4, #28]
 1479              	.LVL99:
 1480              	.L160:
 1481              		.loc 1 784 7 is_stmt 0 view .LVU473
 1482              	.LBE14:
 785:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 786:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 787:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 788:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------- USART1 Configuration ------------------------*/ 
 789:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 1483              		.loc 1 789 3 is_stmt 1 view .LVU474
 1484              		.loc 1 789 21 is_stmt 0 view .LVU475
 1485 0064 2A68     		ldr	r2, [r5]
 1486              		.loc 1 789 5 view .LVU476
 1487 0066 D307     		lsls	r3, r2, #31
 1488 0068 06D5     		bpl	.L174
 790:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 791:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 792:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));
 1489              		.loc 1 792 5 is_stmt 1 view .LVU477
 793:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 794:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USART1 clock source */
 795:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 1490              		.loc 1 795 5 view .LVU478
 1491 006a 0320     		movs	r0, #3
 1492 006c 2149     		ldr	r1, .L188
 1493 006e 0B6B     		ldr	r3, [r1, #48]
 1494 0070 8343     		bics	r3, r0
 1495 0072 A868     		ldr	r0, [r5, #8]
 1496 0074 0343     		orrs	r3, r0
 1497 0076 0B63     		str	r3, [r1, #48]
 1498              	.L174:
 796:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 797:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 798:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 799:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F091xC) || defined(STM32F098xx)
 800:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- USART2 Configuration --------------------------*/ 
 801:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 802:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 803:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 804:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));
 805:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 806:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USART2 clock source */
 807:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 808:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 809:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F071xB || STM32F072xB || STM32F078xx || */
 810:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F091xC || STM32F098xx */
 811:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 812:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F091xC) || defined(STM32F098xx)
 813:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*----------------------------- USART3 Configuration --------------------------*/ 
 814:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 815:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 816:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 817:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));
 818:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 819:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USART3 clock source */
 820:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 821:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 822:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F091xC || STM32F098xx */  
 823:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 824:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ I2C1 Configuration ------------------------*/ 
 825:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 1499              		.loc 1 825 3 view .LVU479
 1500              		.loc 1 825 5 is_stmt 0 view .LVU480
 1501 0078 9206     		lsls	r2, r2, #26
 1502 007a 33D4     		bmi	.L175
 1503              	.L176:
 826:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 827:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 828:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));
 829:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 830:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the I2C1 clock source */
 831:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 832:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 833:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 834:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) ||
 835:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ USB Configuration ------------------------*/ 
 836:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 837:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 838:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 839:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
 840:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 841:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the USB clock source */
 842:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 843:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 844:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F042x6 || STM32F048xx || STM32F072xB || STM32F078xx || STM32F070xB || STM32F070x6 */
 845:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 846:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined(STM32F042x6) || defined(STM32F048xx)\
 847:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F051x8) || defined(STM32F058xx)\
 848:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx)\
 849:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****  || defined(STM32F091xC) || defined(STM32F098xx)
 850:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*------------------------------ CEC clock Configuration -------------------*/ 
 851:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 852:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 853:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
 854:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));
 855:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 856:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Configure the CEC clock source */
 857:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 858:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 859:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* STM32F042x6 || STM32F048xx ||                */
 860:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F051x8 || STM32F058xx ||                */
 861:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F071xB || STM32F072xB || STM32F078xx || */
 862:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        /* STM32F091xC || STM32F098xx */
 863:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 864:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 1504              		.loc 1 864 10 view .LVU481
 1505 007c 0020     		movs	r0, #0
 1506 007e 0FE0     		b	.L166
 1507              	.LVL100:
 1508              	.L162:
 1509              	.LBB16:
 737:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1510              		.loc 1 737 7 is_stmt 1 view .LVU482
 1511 0080 3368     		ldr	r3, [r6]
 1512 0082 3B43     		orrs	r3, r7
 1513 0084 3360     		str	r3, [r6]
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1514              		.loc 1 740 7 view .LVU483
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1515              		.loc 1 740 19 is_stmt 0 view .LVU484
 1516 0086 FFF7FEFF 		bl	HAL_GetTick
 1517              	.LVL101:
 740:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1518              		.loc 1 740 19 view .LVU485
 1519 008a 0190     		str	r0, [sp, #4]
 1520              	.LVL102:
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1521              		.loc 1 742 7 is_stmt 1 view .LVU486
 1522              	.L165:
 742:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1523              		.loc 1 742 13 view .LVU487
 1524 008c 3368     		ldr	r3, [r6]
 1525 008e 3B42     		tst	r3, r7
 1526 0090 D3D1     		bne	.L168
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1527              		.loc 1 744 9 view .LVU488
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1528              		.loc 1 744 13 is_stmt 0 view .LVU489
 1529 0092 FFF7FEFF 		bl	HAL_GetTick
 1530              	.LVL103:
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1531              		.loc 1 744 27 view .LVU490
 1532 0096 019B     		ldr	r3, [sp, #4]
 1533 0098 C01A     		subs	r0, r0, r3
 744:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1534              		.loc 1 744 11 view .LVU491
 1535 009a 6428     		cmp	r0, #100
 1536 009c F6D9     		bls	.L165
 1537              	.LVL104:
 1538              	.L172:
 746:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1539              		.loc 1 746 18 view .LVU492
 1540 009e 0320     		movs	r0, #3
 1541              	.LVL105:
 1542              	.L166:
 746:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1543              		.loc 1 746 18 view .LVU493
 1544              	.LBE16:
 865:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1545              		.loc 1 865 1 view .LVU494
 1546 00a0 05B0     		add	sp, sp, #20
 1547              		@ sp needed
 1548              	.LVL106:
 1549              		.loc 1 865 1 view .LVU495
 1550 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1551              	.LVL107:
 1552              	.L163:
 1553              	.LBB17:
 753:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1554              		.loc 1 753 84 discriminator 1 view .LVU496
 1555 00a4 1340     		ands	r3, r2
 753:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1556              		.loc 1 753 34 discriminator 1 view .LVU497
 1557 00a6 8342     		cmp	r3, r0
 1558 00a8 D0D0     		beq	.L164
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 1559              		.loc 1 756 7 is_stmt 1 view .LVU498
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 1560              		.loc 1 758 7 is_stmt 0 view .LVU499
 1561 00aa 8022     		movs	r2, #128
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 1562              		.loc 1 756 22 view .LVU500
 1563 00ac 236A     		ldr	r3, [r4, #32]
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 1564              		.loc 1 758 7 view .LVU501
 1565 00ae 206A     		ldr	r0, [r4, #32]
 1566              	.LVL108:
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 1567              		.loc 1 756 16 view .LVU502
 1568 00b0 1900     		movs	r1, r3
 1569              	.LVL109:
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 1570              		.loc 1 758 7 view .LVU503
 1571 00b2 5202     		lsls	r2, r2, #9
 1572 00b4 0243     		orrs	r2, r0
 1573 00b6 2262     		str	r2, [r4, #32]
 759:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Restore the Content of BDCR register */
 1574              		.loc 1 759 7 view .LVU504
 1575 00b8 226A     		ldr	r2, [r4, #32]
 1576 00ba 1248     		ldr	r0, .L188+16
 756:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* RTC Clock selection can be changed only if the Backup Domain is reset */
 1577              		.loc 1 756 16 view .LVU505
 1578 00bc 3140     		ands	r1, r6
 1579              	.LVL110:
 758:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       __HAL_RCC_BACKUPRESET_RELEASE();
 1580              		.loc 1 758 7 is_stmt 1 view .LVU506
 759:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Restore the Content of BDCR register */
 1581              		.loc 1 759 7 view .LVU507
 1582 00be 0240     		ands	r2, r0
 1583 00c0 2262     		str	r2, [r4, #32]
 761:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1584              		.loc 1 761 7 view .LVU508
 761:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       
 1585              		.loc 1 761 17 is_stmt 0 view .LVU509
 1586 00c2 2162     		str	r1, [r4, #32]
 764:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1587              		.loc 1 764 7 is_stmt 1 view .LVU510
 764:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1588              		.loc 1 764 10 is_stmt 0 view .LVU511
 1589 00c4 DB07     		lsls	r3, r3, #31
 1590 00c6 C1D5     		bpl	.L164
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1591              		.loc 1 767 9 is_stmt 1 view .LVU512
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1592              		.loc 1 767 21 is_stmt 0 view .LVU513
 1593 00c8 FFF7FEFF 		bl	HAL_GetTick
 1594              	.LVL111:
 767:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1595              		.loc 1 767 21 view .LVU514
 1596 00cc 0700     		movs	r7, r0
 1597              	.LVL112:
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1598              		.loc 1 770 9 is_stmt 1 view .LVU515
 1599              	.L171:
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1600              		.loc 1 770 51 view .LVU516
 1601 00ce 0222     		movs	r2, #2
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1602              		.loc 1 770 15 is_stmt 0 view .LVU517
 1603 00d0 236A     		ldr	r3, [r4, #32]
 770:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1604              		.loc 1 770 51 view .LVU518
 1605 00d2 1342     		tst	r3, r2
 1606 00d4 BAD1     		bne	.L164
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1607              		.loc 1 772 11 is_stmt 1 view .LVU519
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1608              		.loc 1 772 15 is_stmt 0 view .LVU520
 1609 00d6 FFF7FEFF 		bl	HAL_GetTick
 1610              	.LVL113:
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1611              		.loc 1 772 13 view .LVU521
 1612 00da 0B4B     		ldr	r3, .L188+20
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1613              		.loc 1 772 29 view .LVU522
 1614 00dc C01B     		subs	r0, r0, r7
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1615              		.loc 1 772 13 view .LVU523
 1616 00de 9842     		cmp	r0, r3
 1617 00e0 F5D9     		bls	.L171
 1618 00e2 DCE7     		b	.L172
 1619              	.LVL114:
 1620              	.L175:
 772:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           {
 1621              		.loc 1 772 13 view .LVU524
 1622              	.LBE17:
 828:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1623              		.loc 1 828 5 is_stmt 1 view .LVU525
 831:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 1624              		.loc 1 831 5 view .LVU526
 1625 00e4 1021     		movs	r1, #16
 1626 00e6 034A     		ldr	r2, .L188
 1627 00e8 136B     		ldr	r3, [r2, #48]
 1628 00ea 8B43     		bics	r3, r1
 1629 00ec E968     		ldr	r1, [r5, #12]
 1630 00ee 0B43     		orrs	r3, r1
 1631 00f0 1363     		str	r3, [r2, #48]
 1632 00f2 C3E7     		b	.L176
 1633              	.L189:
 1634              		.align	2
 1635              	.L188:
 1636 00f4 00100240 		.word	1073876992
 1637 00f8 00700040 		.word	1073770496
 1638 00fc FFFCFFFF 		.word	-769
 1639 0100 FFFFFFEF 		.word	-268435457
 1640 0104 FFFFFEFF 		.word	-65537
 1641 0108 88130000 		.word	5000
 1642              		.cfi_endproc
 1643              	.LFE43:
 1645              		.section	.text.HAL_GPIO_Init,"ax",%progbits
 1646              		.align	1
 1647              		.global	HAL_GPIO_Init
 1648              		.syntax unified
 1649              		.code	16
 1650              		.thumb_func
 1652              	HAL_GPIO_Init:
 1653              	.LVL115:
 1654              	.LFB44:
 866:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 867:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 868:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 869:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_MODE             (0x00000003U)
 870:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define EXTI_MODE             (0x10000000U)
 871:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_MODE_IT          (0x00010000U)
 872:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_MODE_EVT         (0x00020000U)
 873:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define RISING_EDGE           (0x00100000U)
 874:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define FALLING_EDGE          (0x00200000U)
 875:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_OUTPUT_TYPE      (0x00000010U)
 876:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 877:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define GPIO_NUMBER           (16U)
 878:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 879:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define __HAL_RCC_GPIOA_CLK_ENABLE()   do { \
 880:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         __IO uint32_t tmpreg; \
 881:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         SET_BIT(RCC->AHBENR, RCC_AHBENR_GPIOAEN);\
 882:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         /* Delay after an RCC peripheral clock enabling */\
 883:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         tmpreg = READ_BIT(RCC->AHBENR, RCC_AHBENR_GPIOAEN);\
 884:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         UNUSED(tmpreg); \
 885:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                       } while(0)
 886:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #define __HAL_RCC_USART1_CLK_ENABLE()   do { \
 887:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         __IO uint32_t tmpreg; \
 888:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         SET_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN);\
 889:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         /* Delay after an RCC peripheral clock enabling */\
 890:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         tmpreg = READ_BIT(RCC->APB2ENR, RCC_APB2ENR_USART1EN);\
 891:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                         UNUSED(tmpreg); \
 892:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                                       } while(0)
 893:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 894:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
 895:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Initialize the GPIOx peripheral according to the specified parameters in the GPIO_Init.
 896:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..F) to select the GPIO peripheral for STM32F0 family
 897:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
 898:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         the configuration information for the specified GPIO peripheral.
 899:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval None
 900:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
 901:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
 902:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** { 
 1655              		.loc 1 902 1 view -0
 1656              		.cfi_startproc
 1657              		@ args = 0, pretend = 0, frame = 24
 1658              		@ frame_needed = 0, uses_anonymous_args = 0
 903:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t position = 0x00U;
 1659              		.loc 1 903 3 view .LVU528
 904:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 1660              		.loc 1 904 3 view .LVU529
 905:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t temp = 0x00U;
 1661              		.loc 1 905 3 view .LVU530
 906:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 907:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
 908:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 1662              		.loc 1 908 3 view .LVU531
 909:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 1663              		.loc 1 909 3 view .LVU532
 910:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 1664              		.loc 1 910 3 view .LVU533
 911:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PULL(GPIO_Init->Pull)); 
 1665              		.loc 1 911 3 view .LVU534
 912:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 913:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure the port pins */
 914:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   while (((GPIO_Init->Pin) >> position) != RESET)
 1666              		.loc 1 914 3 view .LVU535
 903:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 1667              		.loc 1 903 12 is_stmt 0 view .LVU536
 1668 0000 0023     		movs	r3, #0
 902:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t position = 0x00U;
 1669              		.loc 1 902 1 view .LVU537
 1670 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1671              	.LCFI5:
 1672              		.cfi_def_cfa_offset 20
 1673              		.cfi_offset 4, -20
 1674              		.cfi_offset 5, -16
 1675              		.cfi_offset 6, -12
 1676              		.cfi_offset 7, -8
 1677              		.cfi_offset 14, -4
 1678 0004 87B0     		sub	sp, sp, #28
 1679              	.LCFI6:
 1680              		.cfi_def_cfa_offset 48
 1681              	.LVL116:
 1682              	.L191:
 1683              		.loc 1 914 41 is_stmt 1 view .LVU538
 1684              		.loc 1 914 21 is_stmt 0 view .LVU539
 1685 0006 0A68     		ldr	r2, [r1]
 1686              		.loc 1 914 28 view .LVU540
 1687 0008 1400     		movs	r4, r2
 1688 000a DC40     		lsrs	r4, r4, r3
 1689              		.loc 1 914 41 view .LVU541
 1690 000c 01D1     		bne	.L206
 915:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 916:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Get current io position */
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     iocurrent = (GPIO_Init->Pin) & (1U << position);
 918:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(iocurrent)
 920:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 921:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /*--------------------- GPIO Mode Configuration ------------------------*/
 922:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* In case of Alternate function mode selection */
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD)) 
 924:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 925:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Check the Alternate function parameters */
 926:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
 927:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 928:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 929:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure Alternate function mapped with the current IO */ 
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = GPIOx->AFR[position >> 3];
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 932:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 933:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 934:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 935:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 936:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       temp = GPIOx->MODER;
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 941:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 942:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* In case of Output or Alternate function mode selection */
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 944:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 945:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 946:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Check the Speed parameter */
 947:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 948:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the IO Speed */
 949:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = GPIOx->OSPEEDR; 
 950:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 951:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 952:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 953:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 954:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the IO Output Type */
 955:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = GPIOx->OTYPER;
 956:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 958:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 959:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 960:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 961:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Activate the Pull-up or Pull down resistor for the current IO */
 962:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       temp = GPIOx->PUPDR;
 963:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 964:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 965:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 966:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 967:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /*--------------------- EXTI Mode Configuration ------------------------*/
 968:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Configure the External Interrupt or event for the current IO */
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE) 
 970:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 971:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Enable SYSCFG Clock */
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_RCC_SYSCFG_CLK_ENABLE();
 973:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = SYSCFG->EXTICR[position >> 2];
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 977:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 978:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                   
 979:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Clear EXTI line configuration */
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->IMR;
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 983:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 984:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
 985:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 986:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->IMR = temp;
 987:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 988:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->EMR;
 989:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 991:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 992:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
 993:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 994:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->EMR = temp;
 995:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 996:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Clear Rising Falling edge configuration */
 997:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->RTSR;
 998:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
1000:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
1001:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
1002:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
1003:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->RTSR = temp;
1004:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1005:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         temp = EXTI->FTSR;
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
1008:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           SET_BIT(temp, iocurrent); 
1010:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
1011:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         EXTI->FTSR = temp;
1012:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1013:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1014:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     position++;
1016:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
1017:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 1691              		.loc 1 1017 1 view .LVU542
 1692 000e 07B0     		add	sp, sp, #28
 1693              		@ sp needed
 1694 0010 F0BD     		pop	{r4, r5, r6, r7, pc}
 1695              	.L206:
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1696              		.loc 1 917 5 is_stmt 1 view .LVU543
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1697              		.loc 1 917 40 is_stmt 0 view .LVU544
 1698 0012 0126     		movs	r6, #1
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1699              		.loc 1 917 15 view .LVU545
 1700 0014 1400     		movs	r4, r2
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1701              		.loc 1 917 40 view .LVU546
 1702 0016 9E40     		lsls	r6, r6, r3
 917:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     
 1703              		.loc 1 917 15 view .LVU547
 1704 0018 3440     		ands	r4, r6
 1705 001a 0294     		str	r4, [sp, #8]
 1706              	.LVL117:
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1707              		.loc 1 919 5 is_stmt 1 view .LVU548
 919:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 1708              		.loc 1 919 7 is_stmt 0 view .LVU549
 1709 001c 3242     		tst	r2, r6
 1710 001e 00D1     		bne	.LCB1545
 1711 0020 94E0     		b	.L193	@long jump
 1712              	.LCB1545:
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1713              		.loc 1 923 7 is_stmt 1 view .LVU550
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1714              		.loc 1 923 20 is_stmt 0 view .LVU551
 1715 0022 4A68     		ldr	r2, [r1, #4]
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1716              		.loc 1 923 9 view .LVU552
 1717 0024 1500     		movs	r5, r2
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1718              		.loc 1 923 20 view .LVU553
 1719 0026 0192     		str	r2, [sp, #4]
 923:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1720              		.loc 1 923 9 view .LVU554
 1721 0028 1022     		movs	r2, #16
 1722 002a 9543     		bics	r5, r2
 1723 002c 0395     		str	r5, [sp, #12]
 1724 002e 022D     		cmp	r5, #2
 1725 0030 0FD1     		bne	.L194
 926:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 1726              		.loc 1 926 9 is_stmt 1 view .LVU555
 927:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         
 1727              		.loc 1 927 9 view .LVU556
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 1728              		.loc 1 930 9 view .LVU557
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 1729              		.loc 1 931 9 is_stmt 0 view .LVU558
 1730 0032 0724     		movs	r4, #7
 1731              	.LVL118:
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 1732              		.loc 1 931 9 view .LVU559
 1733 0034 0F25     		movs	r5, #15
 1734 0036 1C40     		ands	r4, r3
 1735 0038 A400     		lsls	r4, r4, #2
 1736 003a A540     		lsls	r5, r5, r4
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 1737              		.loc 1 930 36 view .LVU560
 1738 003c DA08     		lsrs	r2, r3, #3
 1739 003e 9200     		lsls	r2, r2, #2
 1740 0040 8218     		adds	r2, r0, r2
 930:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, 0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;      
 1741              		.loc 1 930 14 view .LVU561
 1742 0042 176A     		ldr	r7, [r2, #32]
 1743              	.LVL119:
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 1744              		.loc 1 931 9 is_stmt 1 view .LVU562
 1745 0044 AF43     		bics	r7, r5
 1746              	.LVL120:
 931:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));    
 1747              		.loc 1 931 9 is_stmt 0 view .LVU563
 1748 0046 BC46     		mov	ip, r7
 1749              	.LVL121:
 932:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 1750              		.loc 1 932 9 is_stmt 1 view .LVU564
 1751 0048 0F69     		ldr	r7, [r1, #16]
 1752              	.LVL122:
 932:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->AFR[position >> 3U] = temp;
 1753              		.loc 1 932 9 is_stmt 0 view .LVU565
 1754 004a A740     		lsls	r7, r7, r4
 1755 004c 6446     		mov	r4, ip
 1756 004e 2743     		orrs	r7, r4
 1757              	.LVL123:
 933:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 1758              		.loc 1 933 9 is_stmt 1 view .LVU566
 933:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 1759              		.loc 1 933 36 is_stmt 0 view .LVU567
 1760 0050 1762     		str	r7, [r2, #32]
 1761              	.LVL124:
 1762              	.L194:
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 1763              		.loc 1 937 7 is_stmt 1 view .LVU568
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 1764              		.loc 1 938 7 is_stmt 0 view .LVU569
 1765 0052 0322     		movs	r2, #3
 1766 0054 5C00     		lsls	r4, r3, #1
 1767 0056 A240     		lsls	r2, r2, r4
 1768 0058 D543     		mvns	r5, r2
 1769 005a AC46     		mov	ip, r5
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1770              		.loc 1 939 7 view .LVU570
 1771 005c 0325     		movs	r5, #3
 937:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_MODER_MODER0 << (position * 2U));   
 1772              		.loc 1 937 12 view .LVU571
 1773 005e 0768     		ldr	r7, [r0]
 1774              	.LVL125:
 938:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 1775              		.loc 1 938 7 is_stmt 1 view .LVU572
 1776 0060 9743     		bics	r7, r2
 1777              	.LVL126:
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1778              		.loc 1 939 7 view .LVU573
 1779 0062 019A     		ldr	r2, [sp, #4]
 1780 0064 2A40     		ands	r2, r5
 1781 0066 A240     		lsls	r2, r2, r4
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1782              		.loc 1 943 10 is_stmt 0 view .LVU574
 1783 0068 039D     		ldr	r5, [sp, #12]
 939:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->MODER = temp;
 1784              		.loc 1 939 7 view .LVU575
 1785 006a 3A43     		orrs	r2, r7
 1786              	.LVL127:
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1787              		.loc 1 940 7 is_stmt 1 view .LVU576
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1788              		.loc 1 943 10 is_stmt 0 view .LVU577
 1789 006c 013D     		subs	r5, r5, #1
 940:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1790              		.loc 1 940 20 view .LVU578
 1791 006e 0260     		str	r2, [r0]
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1792              		.loc 1 943 7 is_stmt 1 view .LVU579
 943:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****           (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 1793              		.loc 1 943 10 is_stmt 0 view .LVU580
 1794 0070 012D     		cmp	r5, #1
 1795 0072 0FD8     		bhi	.L195
 947:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Configure the IO Speed */
 1796              		.loc 1 947 9 is_stmt 1 view .LVU581
 949:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 1797              		.loc 1 949 9 view .LVU582
 950:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 1798              		.loc 1 950 9 is_stmt 0 view .LVU583
 1799 0074 6246     		mov	r2, ip
 1800              	.LVL128:
 949:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 1801              		.loc 1 949 14 view .LVU584
 1802 0076 8568     		ldr	r5, [r0, #8]
 1803              	.LVL129:
 950:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, GPIO_Init->Speed << (position * 2U));
 1804              		.loc 1 950 9 is_stmt 1 view .LVU585
 1805 0078 1540     		ands	r5, r2
 1806              	.LVL130:
 951:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 1807              		.loc 1 951 9 view .LVU586
 1808 007a CA68     		ldr	r2, [r1, #12]
 1809 007c A240     		lsls	r2, r2, r4
 1810 007e 2A43     		orrs	r2, r5
 1811              	.LVL131:
 952:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1812              		.loc 1 952 9 view .LVU587
 952:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1813              		.loc 1 952 24 is_stmt 0 view .LVU588
 1814 0080 8260     		str	r2, [r0, #8]
 955:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 1815              		.loc 1 955 9 is_stmt 1 view .LVU589
 955:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, GPIO_OTYPER_OT_0 << position) ;
 1816              		.loc 1 955 14 is_stmt 0 view .LVU590
 1817 0082 4568     		ldr	r5, [r0, #4]
 1818              	.LVL132:
 956:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 1819              		.loc 1 956 9 is_stmt 1 view .LVU591
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 1820              		.loc 1 957 9 is_stmt 0 view .LVU592
 1821 0084 019A     		ldr	r2, [sp, #4]
 956:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, ((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 1822              		.loc 1 956 9 view .LVU593
 1823 0086 B543     		bics	r5, r6
 1824              	.LVL133:
 957:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 1825              		.loc 1 957 9 is_stmt 1 view .LVU594
 1826 0088 0126     		movs	r6, #1
 1827 008a 1209     		lsrs	r2, r2, #4
 1828 008c 3240     		ands	r2, r6
 1829 008e 9A40     		lsls	r2, r2, r3
 1830 0090 2A43     		orrs	r2, r5
 1831              	.LVL134:
 958:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 1832              		.loc 1 958 9 view .LVU595
 958:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 1833              		.loc 1 958 23 is_stmt 0 view .LVU596
 1834 0092 4260     		str	r2, [r0, #4]
 1835              	.LVL135:
 1836              	.L195:
 962:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 1837              		.loc 1 962 7 is_stmt 1 view .LVU597
 963:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 1838              		.loc 1 963 7 is_stmt 0 view .LVU598
 1839 0094 6246     		mov	r2, ip
 962:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       CLEAR_BIT(temp, GPIO_PUPDR_PUPDR0 << (position * 2U));
 1840              		.loc 1 962 12 view .LVU599
 1841 0096 C568     		ldr	r5, [r0, #12]
 1842              	.LVL136:
 963:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       SET_BIT(temp, (GPIO_Init->Pull) << (position * 2U));
 1843              		.loc 1 963 7 is_stmt 1 view .LVU600
 1844 0098 1540     		ands	r5, r2
 1845              	.LVL137:
 964:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 1846              		.loc 1 964 7 view .LVU601
 1847 009a 8A68     		ldr	r2, [r1, #8]
 1848 009c A240     		lsls	r2, r2, r4
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1849              		.loc 1 969 9 is_stmt 0 view .LVU602
 1850 009e 8024     		movs	r4, #128
 964:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 1851              		.loc 1 964 7 view .LVU603
 1852 00a0 2A43     		orrs	r2, r5
 1853              	.LVL138:
 965:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1854              		.loc 1 965 7 is_stmt 1 view .LVU604
 965:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1855              		.loc 1 965 20 is_stmt 0 view .LVU605
 1856 00a2 C260     		str	r2, [r0, #12]
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1857              		.loc 1 969 7 is_stmt 1 view .LVU606
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1858              		.loc 1 969 9 is_stmt 0 view .LVU607
 1859 00a4 019A     		ldr	r2, [sp, #4]
 1860              	.LVL139:
 969:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 1861              		.loc 1 969 9 view .LVU608
 1862 00a6 6405     		lsls	r4, r4, #21
 1863 00a8 2242     		tst	r2, r4
 1864 00aa 4FD0     		beq	.L193
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1865              		.loc 1 972 9 is_stmt 1 view .LVU609
 1866              	.LBB18:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1867              		.loc 1 972 9 view .LVU610
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1868              		.loc 1 972 9 view .LVU611
 1869 00ac 0125     		movs	r5, #1
 1870 00ae 284A     		ldr	r2, .L218
 1871              	.LBE18:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1872              		.loc 1 976 9 is_stmt 0 view .LVU612
 1873 00b0 9027     		movs	r7, #144
 1874              	.LBB19:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1875              		.loc 1 972 9 view .LVU613
 1876 00b2 9469     		ldr	r4, [r2, #24]
 1877              	.LBE19:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1878              		.loc 1 976 9 view .LVU614
 1879 00b4 FF05     		lsls	r7, r7, #23
 1880              	.LBB20:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1881              		.loc 1 972 9 view .LVU615
 1882 00b6 2C43     		orrs	r4, r5
 1883 00b8 9461     		str	r4, [r2, #24]
 1884              	.LVL140:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1885              		.loc 1 972 9 is_stmt 1 view .LVU616
 1886 00ba 9269     		ldr	r2, [r2, #24]
 1887              	.LBE20:
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 1888              		.loc 1 974 40 is_stmt 0 view .LVU617
 1889 00bc 9C08     		lsrs	r4, r3, #2
 1890              	.LBB21:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1891              		.loc 1 972 9 view .LVU618
 1892 00be 2A40     		ands	r2, r5
 1893 00c0 0592     		str	r2, [sp, #20]
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1894              		.loc 1 972 9 is_stmt 1 view .LVU619
 1895 00c2 059A     		ldr	r2, [sp, #20]
 1896              	.LBE21:
 972:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1897              		.loc 1 972 9 view .LVU620
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 1898              		.loc 1 974 9 view .LVU621
 1899 00c4 234A     		ldr	r2, .L218+4
 1900 00c6 A400     		lsls	r4, r4, #2
 1901 00c8 A418     		adds	r4, r4, r2
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 1902              		.loc 1 975 9 is_stmt 0 view .LVU622
 1903 00ca 0F22     		movs	r2, #15
 1904 00cc 0235     		adds	r5, r5, #2
 1905 00ce 1D40     		ands	r5, r3
 1906 00d0 AD00     		lsls	r5, r5, #2
 1907 00d2 AA40     		lsls	r2, r2, r5
 974:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (0x0FU) << (4U * (position & 0x03U)));
 1908              		.loc 1 974 14 view .LVU623
 1909 00d4 A668     		ldr	r6, [r4, #8]
 1910              	.LVL141:
 975:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 1911              		.loc 1 975 9 is_stmt 1 view .LVU624
 1912 00d6 9643     		bics	r6, r2
 1913              	.LVL142:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1914              		.loc 1 976 9 view .LVU625
 1915 00d8 0022     		movs	r2, #0
 1916 00da B842     		cmp	r0, r7
 1917 00dc 0CD0     		beq	.L197
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1918              		.loc 1 976 9 is_stmt 0 discriminator 1 view .LVU626
 1919 00de 1E4F     		ldr	r7, .L218+8
 1920 00e0 0132     		adds	r2, r2, #1
 1921 00e2 B842     		cmp	r0, r7
 1922 00e4 08D0     		beq	.L197
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1923              		.loc 1 976 9 discriminator 3 view .LVU627
 1924 00e6 1D4F     		ldr	r7, .L218+12
 1925 00e8 0132     		adds	r2, r2, #1
 1926 00ea B842     		cmp	r0, r7
 1927 00ec 04D0     		beq	.L197
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1928              		.loc 1 976 9 discriminator 5 view .LVU628
 1929 00ee 1C4F     		ldr	r7, .L218+16
 1930 00f0 0332     		adds	r2, r2, #3
 1931 00f2 B842     		cmp	r0, r7
 1932 00f4 00D1     		bne	.L197
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1933              		.loc 1 976 9 view .LVU629
 1934 00f6 023A     		subs	r2, r2, #2
 1935              	.L197:
 976:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 1936              		.loc 1 976 9 discriminator 16 view .LVU630
 1937 00f8 AA40     		lsls	r2, r2, r5
 1938 00fa 3243     		orrs	r2, r6
 1939              	.LVL143:
 977:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                   
 1940              		.loc 1 977 9 is_stmt 1 discriminator 16 view .LVU631
 977:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****                   
 1941              		.loc 1 977 39 is_stmt 0 discriminator 16 view .LVU632
 1942 00fc A260     		str	r2, [r4, #8]
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 1943              		.loc 1 980 9 is_stmt 1 discriminator 16 view .LVU633
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 1944              		.loc 1 980 14 is_stmt 0 discriminator 16 view .LVU634
 1945 00fe 194A     		ldr	r2, .L218+20
 1946              	.LVL144:
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1947              		.loc 1 981 9 discriminator 16 view .LVU635
 1948 0100 029C     		ldr	r4, [sp, #8]
 1949              	.LVL145:
 980:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);
 1950              		.loc 1 980 14 discriminator 16 view .LVU636
 1951 0102 1668     		ldr	r6, [r2]
 1952              	.LVL146:
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1953              		.loc 1 981 9 is_stmt 1 discriminator 16 view .LVU637
 984:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1954              		.loc 1 984 11 is_stmt 0 discriminator 16 view .LVU638
 1955 0104 029D     		ldr	r5, [sp, #8]
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1956              		.loc 1 982 11 discriminator 16 view .LVU639
 1957 0106 019F     		ldr	r7, [sp, #4]
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1958              		.loc 1 981 9 discriminator 16 view .LVU640
 1959 0108 E443     		mvns	r4, r4
 1960              	.LVL147:
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1961              		.loc 1 982 9 is_stmt 1 discriminator 16 view .LVU641
 984:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1962              		.loc 1 984 11 is_stmt 0 discriminator 16 view .LVU642
 1963 010a 3543     		orrs	r5, r6
 982:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 1964              		.loc 1 982 11 discriminator 16 view .LVU643
 1965 010c FF03     		lsls	r7, r7, #15
 1966 010e 01D4     		bmi	.L199
 981:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 1967              		.loc 1 981 9 view .LVU644
 1968 0110 3500     		movs	r5, r6
 1969 0112 2540     		ands	r5, r4
 1970              	.LVL148:
 1971              	.L199:
 986:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1972              		.loc 1 986 9 is_stmt 1 view .LVU645
 986:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 1973              		.loc 1 986 19 is_stmt 0 view .LVU646
 1974 0114 1560     		str	r5, [r2]
 988:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 1975              		.loc 1 988 9 is_stmt 1 view .LVU647
 988:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent);      
 1976              		.loc 1 988 14 is_stmt 0 view .LVU648
 1977 0116 5668     		ldr	r6, [r2, #4]
 1978              	.LVL149:
 989:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 1979              		.loc 1 989 9 is_stmt 1 view .LVU649
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 1980              		.loc 1 990 9 view .LVU650
 992:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1981              		.loc 1 992 11 is_stmt 0 view .LVU651
 1982 0118 029D     		ldr	r5, [sp, #8]
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 1983              		.loc 1 990 11 view .LVU652
 1984 011a 019F     		ldr	r7, [sp, #4]
 992:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 1985              		.loc 1 992 11 view .LVU653
 1986 011c 3543     		orrs	r5, r6
 990:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         { 
 1987              		.loc 1 990 11 view .LVU654
 1988 011e BF03     		lsls	r7, r7, #14
 1989 0120 01D4     		bmi	.L201
 989:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 1990              		.loc 1 989 9 view .LVU655
 1991 0122 3500     		movs	r5, r6
 1992 0124 2540     		ands	r5, r4
 1993              	.LVL150:
 1994              	.L201:
 994:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1995              		.loc 1 994 9 is_stmt 1 view .LVU656
 994:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 1996              		.loc 1 994 19 is_stmt 0 view .LVU657
 1997 0126 5560     		str	r5, [r2, #4]
 997:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 1998              		.loc 1 997 9 is_stmt 1 view .LVU658
 997:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 1999              		.loc 1 997 14 is_stmt 0 view .LVU659
 2000 0128 9668     		ldr	r6, [r2, #8]
 2001              	.LVL151:
 998:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2002              		.loc 1 998 9 is_stmt 1 view .LVU660
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2003              		.loc 1 999 9 view .LVU661
1001:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2004              		.loc 1 1001 11 is_stmt 0 view .LVU662
 2005 012a 029D     		ldr	r5, [sp, #8]
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2006              		.loc 1 999 11 view .LVU663
 2007 012c 019F     		ldr	r7, [sp, #4]
1001:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2008              		.loc 1 1001 11 view .LVU664
 2009 012e 3543     		orrs	r5, r6
 999:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2010              		.loc 1 999 11 view .LVU665
 2011 0130 FF02     		lsls	r7, r7, #11
 2012 0132 01D4     		bmi	.L203
 998:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2013              		.loc 1 998 9 view .LVU666
 2014 0134 3500     		movs	r5, r6
 2015 0136 2540     		ands	r5, r4
 2016              	.LVL152:
 2017              	.L203:
1003:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2018              		.loc 1 1003 9 is_stmt 1 view .LVU667
1003:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2019              		.loc 1 1003 20 is_stmt 0 view .LVU668
 2020 0138 9560     		str	r5, [r2, #8]
1005:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 2021              		.loc 1 1005 9 is_stmt 1 view .LVU669
1005:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(temp, (uint32_t)iocurrent); 
 2022              		.loc 1 1005 14 is_stmt 0 view .LVU670
 2023 013a D568     		ldr	r5, [r2, #12]
 2024              	.LVL153:
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2025              		.loc 1 1006 9 is_stmt 1 view .LVU671
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2026              		.loc 1 1007 9 view .LVU672
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2027              		.loc 1 1009 11 is_stmt 0 view .LVU673
 2028 013c 029E     		ldr	r6, [sp, #8]
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2029              		.loc 1 1007 11 view .LVU674
 2030 013e 019F     		ldr	r7, [sp, #4]
1009:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         }
 2031              		.loc 1 1009 11 view .LVU675
 2032 0140 2E43     		orrs	r6, r5
1007:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         {
 2033              		.loc 1 1007 11 view .LVU676
 2034 0142 BF02     		lsls	r7, r7, #10
 2035 0144 01D4     		bmi	.L205
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2036              		.loc 1 1006 9 view .LVU677
 2037 0146 2540     		ands	r5, r4
 2038              	.LVL154:
1006:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2039              		.loc 1 1006 9 view .LVU678
 2040 0148 2E00     		movs	r6, r5
 2041              	.LVL155:
 2042              	.L205:
1011:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2043              		.loc 1 1011 9 is_stmt 1 view .LVU679
1011:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2044              		.loc 1 1011 20 is_stmt 0 view .LVU680
 2045 014a D660     		str	r6, [r2, #12]
 2046              	.LVL156:
 2047              	.L193:
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
 2048              		.loc 1 1015 5 is_stmt 1 view .LVU681
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
 2049              		.loc 1 1015 13 is_stmt 0 view .LVU682
 2050 014c 0133     		adds	r3, r3, #1
 2051              	.LVL157:
1015:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   } 
 2052              		.loc 1 1015 13 view .LVU683
 2053 014e 5AE7     		b	.L191
 2054              	.L219:
 2055              		.align	2
 2056              	.L218:
 2057 0150 00100240 		.word	1073876992
 2058 0154 00000140 		.word	1073807360
 2059 0158 00040048 		.word	1207960576
 2060 015c 00080048 		.word	1207961600
 2061 0160 000C0048 		.word	1207962624
 2062 0164 00040140 		.word	1073808384
 2063              		.cfi_endproc
 2064              	.LFE44:
 2066              		.section	.text.HAL_GPIO_WritePin,"ax",%progbits
 2067              		.align	1
 2068              		.global	HAL_GPIO_WritePin
 2069              		.syntax unified
 2070              		.code	16
 2071              		.thumb_func
 2073              	HAL_GPIO_WritePin:
 2074              	.LVL158:
 2075              	.LFB45:
1018:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1019:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1020:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Set or clear the selected data port bit.
1021:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   This function uses GPIOx_BSRR and GPIOx_BRR registers to allow atomic read/modify
1022:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
1023:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         the read and the modify access.
1024:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *
1025:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..H) to select the GPIO peripheral for STM32F0 family
1026:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
1027:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
1028:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  PinState: specifies the value to be written to the selected bit.
1029:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *          This parameter can be one of the GPIO_PinState enum values:
1030:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *            @arg GPIO_PIN_RESET: to clear the port pin
1031:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *            @arg GPIO_PIN_SET: to set the port pin
1032:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval None
1033:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1034:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
1035:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2076              		.loc 1 1035 1 is_stmt 1 view -0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 0
 2079              		@ frame_needed = 0, uses_anonymous_args = 0
 2080              		@ link register save eliminated.
1036:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
1037:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 2081              		.loc 1 1037 3 view .LVU685
1038:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN_ACTION(PinState));
 2082              		.loc 1 1038 3 view .LVU686
1039:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1040:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (PinState != GPIO_PIN_RESET)
 2083              		.loc 1 1040 3 view .LVU687
 2084              		.loc 1 1040 6 is_stmt 0 view .LVU688
 2085 0000 002A     		cmp	r2, #0
 2086 0002 01D0     		beq	.L221
1041:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1042:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin;
 2087              		.loc 1 1042 5 is_stmt 1 view .LVU689
 2088              		.loc 1 1042 17 is_stmt 0 view .LVU690
 2089 0004 8161     		str	r1, [r0, #24]
 2090              	.L220:
1043:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1044:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1045:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1046:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     GPIOx->BRR = (uint32_t)GPIO_Pin;
1047:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1048:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }										  
 2091              		.loc 1 1048 1 view .LVU691
 2092              		@ sp needed
 2093 0006 7047     		bx	lr
 2094              	.L221:
1046:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2095              		.loc 1 1046 5 is_stmt 1 view .LVU692
1046:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2096              		.loc 1 1046 16 is_stmt 0 view .LVU693
 2097 0008 8162     		str	r1, [r0, #40]
 2098              		.loc 1 1048 1 view .LVU694
 2099 000a FCE7     		b	.L220
 2100              		.cfi_endproc
 2101              	.LFE45:
 2103              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 2104              		.align	1
 2105              		.global	UART_WaitOnFlagUntilTimeout
 2106              		.syntax unified
 2107              		.code	16
 2108              		.thumb_func
 2110              	UART_WaitOnFlagUntilTimeout:
 2111              	.LVL159:
 2112              	.LFB46:
1049:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1050:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1051:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief  Handle UART Communication Timeout.
1052:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  huart UART handle.
1053:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Flag Specifies the UART flag to check
1054:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Status Flag status (SET or RESET)
1055:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Tickstart Tick start value
1056:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param  Timeout Timeout duration
1057:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1058:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1059:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1060:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2113              		.loc 1 1060 1 is_stmt 1 view -0
 2114              		.cfi_startproc
 2115              		@ args = 4, pretend = 0, frame = 8
 2116              		@ frame_needed = 0, uses_anonymous_args = 0
 2117              		.loc 1 1060 1 is_stmt 0 view .LVU696
 2118 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2119              	.LCFI7:
 2120              		.cfi_def_cfa_offset 32
 2121              		.cfi_offset 0, -32
 2122              		.cfi_offset 1, -28
 2123              		.cfi_offset 2, -24
 2124              		.cfi_offset 4, -20
 2125              		.cfi_offset 5, -16
 2126              		.cfi_offset 6, -12
 2127              		.cfi_offset 7, -8
 2128              		.cfi_offset 14, -4
 2129 0002 0400     		movs	r4, r0
 2130 0004 0E00     		movs	r6, r1
 2131 0006 1700     		movs	r7, r2
 2132 0008 0193     		str	r3, [sp, #4]
1061:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Wait until flag is set */
1062:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 2133              		.loc 1 1062 3 is_stmt 1 view .LVU697
 2134              	.LVL160:
 2135              	.L224:
 2136              		.loc 1 1062 10 is_stmt 0 view .LVU698
 2137 000a 2568     		ldr	r5, [r4]
 2138              	.L225:
 2139              		.loc 1 1062 58 is_stmt 1 view .LVU699
 2140              		.loc 1 1062 10 is_stmt 0 view .LVU700
 2141 000c EB69     		ldr	r3, [r5, #28]
 2142 000e 3340     		ands	r3, r6
 2143              		.loc 1 1062 49 view .LVU701
 2144 0010 9B1B     		subs	r3, r3, r6
 2145 0012 5A42     		rsbs	r2, r3, #0
 2146 0014 5341     		adcs	r3, r3, r2
 2147              		.loc 1 1062 58 view .LVU702
 2148 0016 BB42     		cmp	r3, r7
 2149 0018 01D0     		beq	.L229
1063:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1064:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check for the Timeout */
1065:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(Timeout != HAL_MAX_DELAY)
1066:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
1068:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1069:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1070:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
1071:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1072:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->gState  = HAL_UART_STATE_READY;
1074:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
1075:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1076:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Process Unlocked */
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         __HAL_UNLOCK(huart);
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1079:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1080:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1081:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1082:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
 2150              		.loc 1 1082 10 view .LVU703
 2151 001a 0020     		movs	r0, #0
 2152 001c 17E0     		b	.L227
 2153              	.L229:
1065:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2154              		.loc 1 1065 5 is_stmt 1 view .LVU704
1065:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2155              		.loc 1 1065 7 is_stmt 0 view .LVU705
 2156 001e 089B     		ldr	r3, [sp, #32]
 2157 0020 0133     		adds	r3, r3, #1
 2158 0022 F3D0     		beq	.L225
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2159              		.loc 1 1067 7 is_stmt 1 view .LVU706
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2160              		.loc 1 1067 9 is_stmt 0 view .LVU707
 2161 0024 089B     		ldr	r3, [sp, #32]
 2162 0026 002B     		cmp	r3, #0
 2163 0028 12D1     		bne	.L226
 2164              	.L228:
1070:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2165              		.loc 1 1070 9 is_stmt 1 view .LVU708
 2166 002a 2B68     		ldr	r3, [r5]
 2167 002c 0C4A     		ldr	r2, .L233
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2168              		.loc 1 1078 16 is_stmt 0 view .LVU709
 2169 002e 0320     		movs	r0, #3
1070:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2170              		.loc 1 1070 9 view .LVU710
 2171 0030 1340     		ands	r3, r2
 2172 0032 2B60     		str	r3, [r5]
1071:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2173              		.loc 1 1071 9 is_stmt 1 view .LVU711
 2174 0034 AB68     		ldr	r3, [r5, #8]
 2175 0036 A332     		adds	r2, r2, #163
 2176 0038 FF32     		adds	r2, r2, #255
 2177 003a 9343     		bics	r3, r2
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 2178              		.loc 1 1073 24 is_stmt 0 view .LVU712
 2179 003c 2200     		movs	r2, r4
1071:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2180              		.loc 1 1071 9 view .LVU713
 2181 003e AB60     		str	r3, [r5, #8]
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 2182              		.loc 1 1073 9 is_stmt 1 view .LVU714
1073:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 2183              		.loc 1 1073 24 is_stmt 0 view .LVU715
 2184 0040 2023     		movs	r3, #32
 2185 0042 6932     		adds	r2, r2, #105
 2186 0044 1370     		strb	r3, [r2]
1074:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2187              		.loc 1 1074 9 is_stmt 1 view .LVU716
1074:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2188              		.loc 1 1074 24 is_stmt 0 view .LVU717
 2189 0046 5370     		strb	r3, [r2, #1]
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2190              		.loc 1 1077 9 is_stmt 1 view .LVU718
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2191              		.loc 1 1077 9 view .LVU719
 2192 0048 0023     		movs	r3, #0
 2193 004a 6834     		adds	r4, r4, #104
 2194              	.LVL161:
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2195              		.loc 1 1077 9 is_stmt 0 view .LVU720
 2196 004c 2370     		strb	r3, [r4]
1077:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
 2197              		.loc 1 1077 9 is_stmt 1 view .LVU721
1078:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2198              		.loc 1 1078 9 view .LVU722
 2199              	.LVL162:
 2200              	.L227:
1083:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2201              		.loc 1 1083 1 is_stmt 0 view .LVU723
 2202              		@ sp needed
 2203              	.LVL163:
 2204              		.loc 1 1083 1 view .LVU724
 2205 004e FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2206              	.LVL164:
 2207              	.L226:
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2208              		.loc 1 1067 31 discriminator 1 view .LVU725
 2209 0050 FFF7FEFF 		bl	HAL_GetTick
 2210              	.LVL165:
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2211              		.loc 1 1067 44 discriminator 1 view .LVU726
 2212 0054 019B     		ldr	r3, [sp, #4]
 2213 0056 C01A     		subs	r0, r0, r3
1067:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2214              		.loc 1 1067 26 discriminator 1 view .LVU727
 2215 0058 089B     		ldr	r3, [sp, #32]
 2216 005a 9842     		cmp	r0, r3
 2217 005c D5D9     		bls	.L224
 2218 005e E4E7     		b	.L228
 2219              	.L234:
 2220              		.align	2
 2221              	.L233:
 2222 0060 5FFEFFFF 		.word	-417
 2223              		.cfi_endproc
 2224              	.LFE46:
 2226              		.section	.text.UART_CheckIdleState,"ax",%progbits
 2227              		.align	1
 2228              		.global	UART_CheckIdleState
 2229              		.syntax unified
 2230              		.code	16
 2231              		.thumb_func
 2233              	UART_CheckIdleState:
 2234              	.LVL166:
 2235              	.LFB47:
1084:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1085:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1086:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Check the UART Idle State.
1087:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart UART handle.
1088:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1089:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1090:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
1091:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2236              		.loc 1 1091 1 is_stmt 1 view -0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 0
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
 2240              		@ link register save eliminated.
1092:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1093:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
1094:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1095:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1096:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Initialize the UART ErrorCode */
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2241              		.loc 1 1097 3 view .LVU729
1091:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
 2242              		.loc 1 1091 1 is_stmt 0 view .LVU730
 2243 0000 0300     		movs	r3, r0
1098:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1099:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F070x6)&
1100:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Init tickstart for timeout managment*/
1101:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   tickstart = HAL_GetTick();
1102:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1103:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* TEACK and REACK bits in ISR are checked only when available (not available on all F0 devices).
1104:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****      Bits are defined for some specific devices, and are available only for UART instances supporti
1105:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1106:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (IS_UART_WAKEUP_FROMSTOP_INSTANCE(huart->Instance))
1107:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1108:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if the Transmitter is enabled */
1109:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
1110:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1111:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait until TEACK flag is set */
1112:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
1113:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1114:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Timeout occurred */
1115:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1116:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1117:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1118:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1119:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check if the Receiver is enabled */
1120:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
1121:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1122:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       /* Wait until REACK flag is set */
1123:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VAL
1124:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1125:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         /* Timeout occurred */
1126:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1127:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1128:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1129:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1130:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif /* !defined(STM32F030x6) && !defined(STM32F030x8)&& !defined(STM32F070xB)&& !defined(STM32F0
1131:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1132:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Initialize the UART State */
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->gState  = HAL_UART_STATE_READY;
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
1135:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1136:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Process Unlocked */
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   __HAL_UNLOCK(huart);
1138:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return HAL_OK;
1140:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2244              		.loc 1 1140 1 view .LVU731
 2245              		@ sp needed
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2246              		.loc 1 1097 20 view .LVU732
 2247 0002 0020     		movs	r0, #0
 2248              	.LVL167:
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2249              		.loc 1 1133 18 view .LVU733
 2250 0004 1900     		movs	r1, r3
 2251 0006 2022     		movs	r2, #32
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2252              		.loc 1 1097 20 view .LVU734
 2253 0008 D866     		str	r0, [r3, #108]
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2254              		.loc 1 1133 3 is_stmt 1 view .LVU735
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2255              		.loc 1 1133 18 is_stmt 0 view .LVU736
 2256 000a 6931     		adds	r1, r1, #105
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2257              		.loc 1 1137 3 view .LVU737
 2258 000c 6833     		adds	r3, r3, #104
 2259              	.LVL168:
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2260              		.loc 1 1133 18 view .LVU738
 2261 000e 0A70     		strb	r2, [r1]
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2262              		.loc 1 1134 3 is_stmt 1 view .LVU739
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2263              		.loc 1 1134 18 is_stmt 0 view .LVU740
 2264 0010 4A70     		strb	r2, [r1, #1]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2265              		.loc 1 1137 3 is_stmt 1 view .LVU741
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2266              		.loc 1 1137 3 view .LVU742
 2267 0012 1870     		strb	r0, [r3]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2268              		.loc 1 1137 3 view .LVU743
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2269              		.loc 1 1139 3 view .LVU744
 2270              		.loc 1 1140 1 is_stmt 0 view .LVU745
 2271 0014 7047     		bx	lr
 2272              		.cfi_endproc
 2273              	.LFE47:
 2275              		.global	__aeabi_uidiv
 2276              		.section	.text.UART_SetConfig,"ax",%progbits
 2277              		.align	1
 2278              		.global	UART_SetConfig
 2279              		.syntax unified
 2280              		.code	16
 2281              		.thumb_func
 2283              	UART_SetConfig:
 2284              	.LVL169:
 2285              	.LFB48:
1141:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1142:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
1143:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2286              		.loc 1 1143 1 is_stmt 1 view -0
 2287              		.cfi_startproc
 2288              		@ args = 0, pretend = 0, frame = 0
 2289              		@ frame_needed = 0, uses_anonymous_args = 0
1144:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tmpreg                     = 0x00000000U;
 2290              		.loc 1 1144 3 view .LVU747
1145:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 2291              		.loc 1 1145 3 view .LVU748
1146:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t brrtemp                    = 0x0000U;
 2292              		.loc 1 1146 3 view .LVU749
1147:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t usartdiv                   = 0x0000U;
 2293              		.loc 1 1147 3 view .LVU750
1148:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2294              		.loc 1 1148 3 view .LVU751
1149:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1150:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the parameters */
1151:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 2295              		.loc 1 1151 3 view .LVU752
1152:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 2296              		.loc 1 1152 3 view .LVU753
1153:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2297              		.loc 1 1153 3 view .LVU754
1154:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2298              		.loc 1 1154 3 view .LVU755
1155:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2299              		.loc 1 1155 3 view .LVU756
1156:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 2300              		.loc 1 1156 3 view .LVU757
1157:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2301              		.loc 1 1157 3 view .LVU758
1158:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 2302              		.loc 1 1158 3 view .LVU759
1159:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1160:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1161:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1162:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
1163:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  the UART Word Length, Parity, Mode and oversampling:
1164:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set the M bits according to huart->Init.WordLength value
1165:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set PCE and PS bits according to huart->Init.Parity value
1166:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set TE and RE bits according to huart->Init.Mode value
1167:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 2303              		.loc 1 1168 3 view .LVU760
1143:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tmpreg                     = 0x00000000U;
 2304              		.loc 1 1143 1 is_stmt 0 view .LVU761
 2305 0000 0300     		movs	r3, r0
 2306 0002 70B5     		push	{r4, r5, r6, lr}
 2307              	.LCFI8:
 2308              		.cfi_def_cfa_offset 16
 2309              		.cfi_offset 4, -16
 2310              		.cfi_offset 5, -12
 2311              		.cfi_offset 6, -8
 2312              		.cfi_offset 14, -4
 2313              		.loc 1 1168 45 view .LVU762
 2314 0004 9A68     		ldr	r2, [r3, #8]
 2315 0006 1D69     		ldr	r5, [r3, #16]
1169:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2316              		.loc 1 1169 3 view .LVU763
 2317 0008 0468     		ldr	r4, [r0]
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2318              		.loc 1 1168 45 view .LVU764
 2319 000a 2A43     		orrs	r2, r5
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2320              		.loc 1 1168 66 view .LVU765
 2321 000c 5D69     		ldr	r5, [r3, #20]
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2322              		.loc 1 1168 98 view .LVU766
 2323 000e C169     		ldr	r1, [r0, #28]
 2324              	.LVL170:
 2325              		.loc 1 1169 3 is_stmt 1 view .LVU767
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2326              		.loc 1 1168 66 is_stmt 0 view .LVU768
 2327 0010 2A43     		orrs	r2, r5
 2328              		.loc 1 1169 3 view .LVU769
 2329 0012 2068     		ldr	r0, [r4]
 2330              	.LVL171:
 2331              		.loc 1 1169 3 view .LVU770
 2332 0014 334D     		ldr	r5, .L256
 2333              	.LVL172:
1168:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2334              		.loc 1 1168 10 view .LVU771
 2335 0016 0A43     		orrs	r2, r1
 2336              		.loc 1 1169 3 view .LVU772
 2337 0018 2840     		ands	r0, r5
 2338 001a 0243     		orrs	r2, r0
 2339 001c 2260     		str	r2, [r4]
1170:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1171:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
1172:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
1173:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    * to huart->Init.StopBits value */
1174:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 2340              		.loc 1 1174 3 is_stmt 1 view .LVU773
 2341 001e 6268     		ldr	r2, [r4, #4]
 2342 0020 3148     		ldr	r0, .L256+4
1175:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1176:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
1177:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Configure
1178:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
1179:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *   to huart->Init.HwFlowCtl value
1180:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    * - one-bit sampling method versus three samples' majority rule according
1181:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****    *   to huart->Init.OneBitSampling */
1182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 2343              		.loc 1 1182 10 is_stmt 0 view .LVU774
 2344 0022 1D6A     		ldr	r5, [r3, #32]
1174:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2345              		.loc 1 1174 3 view .LVU775
 2346 0024 0240     		ands	r2, r0
 2347 0026 D868     		ldr	r0, [r3, #12]
 2348 0028 0243     		orrs	r2, r0
 2349 002a 6260     		str	r2, [r4, #4]
 2350              		.loc 1 1182 3 is_stmt 1 view .LVU776
 2351              	.LVL173:
1183:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2352              		.loc 1 1183 3 view .LVU777
1182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2353              		.loc 1 1182 10 is_stmt 0 view .LVU778
 2354 002c 9A69     		ldr	r2, [r3, #24]
 2355              		.loc 1 1183 3 view .LVU779
 2356 002e A068     		ldr	r0, [r4, #8]
1182:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2357              		.loc 1 1182 10 view .LVU780
 2358 0030 2A43     		orrs	r2, r5
 2359              		.loc 1 1183 3 view .LVU781
 2360 0032 2E4D     		ldr	r5, .L256+8
 2361 0034 2840     		ands	r0, r5
 2362 0036 0243     		orrs	r2, r0
1184:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1185:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
1186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 2363              		.loc 1 1186 3 view .LVU782
 2364 0038 0320     		movs	r0, #3
 2365 003a 8025     		movs	r5, #128
1183:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2366              		.loc 1 1183 3 view .LVU783
 2367 003c A260     		str	r2, [r4, #8]
 2368              		.loc 1 1186 3 is_stmt 1 view .LVU784
 2369              		.loc 1 1186 3 view .LVU785
 2370 003e 2C4A     		ldr	r2, .L256+12
 2371 0040 2D02     		lsls	r5, r5, #8
 2372 0042 126B     		ldr	r2, [r2, #48]
 2373 0044 0240     		ands	r2, r0
 2374 0046 013A     		subs	r2, r2, #1
 2375 0048 022A     		cmp	r2, #2
 2376 004a 06D9     		bls	.L237
 2377              	.LVL174:
 2378              		.loc 1 1186 3 view .LVU786
1187:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
1188:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check UART Over Sampling to set Baud Rate Register */
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 2379              		.loc 1 1189 3 view .LVU787
 2380              		.loc 1 1189 6 is_stmt 0 view .LVU788
 2381 004c A942     		cmp	r1, r5
 2382 004e 3CD1     		bne	.L249
 2383              	.LVL175:
 2384              	.L244:
1190:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     switch (clocksource)
1192:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1193:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK1:
1194:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
1195:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1196:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_HSI:
1197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
1198:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1199:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
1200:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 2385              		.loc 1 1200 9 is_stmt 1 view .LVU789
 2386              		.loc 1 1200 31 is_stmt 0 view .LVU790
 2387 0050 5968     		ldr	r1, [r3, #4]
 2388 0052 E123     		movs	r3, #225
 2389              	.LVL176:
 2390              		.loc 1 1200 31 view .LVU791
 2391 0054 4808     		lsrs	r0, r1, #1
 2392 0056 1B04     		lsls	r3, r3, #16
 2393 0058 0FE0     		b	.L254
 2394              	.LVL177:
 2395              	.L237:
 2396              		.loc 1 1200 31 view .LVU792
 2397 005a 2648     		ldr	r0, .L256+16
 2398 005c 805C     		ldrb	r0, [r0, r2]
 2399              	.LVL178:
1186:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   
 2400              		.loc 1 1186 3 is_stmt 1 view .LVU793
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2401              		.loc 1 1189 3 view .LVU794
1189:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2402              		.loc 1 1189 6 is_stmt 0 view .LVU795
 2403 005e A942     		cmp	r1, r5
 2404 0060 20D1     		bne	.L240
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2405              		.loc 1 1191 5 is_stmt 1 view .LVU796
 2406 0062 0828     		cmp	r0, #8
 2407 0064 1BD8     		bhi	.L252
 2408 0066 FFF7FEFF 		bl	__gnu_thumb1_case_sqi
 2409              	.L243:
 2410 006a F3       		.byte	(.L244-.L243)/2
 2411 006b 1A       		.byte	(.L252-.L243)/2
 2412 006c 05       		.byte	(.L245-.L243)/2
 2413 006d 1A       		.byte	(.L252-.L243)/2
 2414 006e F3       		.byte	(.L244-.L243)/2
 2415 006f 1A       		.byte	(.L252-.L243)/2
 2416 0070 1A       		.byte	(.L252-.L243)/2
 2417 0071 1A       		.byte	(.L252-.L243)/2
 2418 0072 15       		.byte	(.L242-.L243)/2
 2419 0073 00       		.p2align 1
 2420              	.L245:
1197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2421              		.loc 1 1197 9 view .LVU797
1197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2422              		.loc 1 1197 31 is_stmt 0 view .LVU798
 2423 0074 5968     		ldr	r1, [r3, #4]
 2424 0076 204B     		ldr	r3, .L256+20
 2425              	.LVL179:
1197:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2426              		.loc 1 1197 31 view .LVU799
 2427 0078 4808     		lsrs	r0, r1, #1
 2428              	.LVL180:
 2429              	.L254:
1201:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1202:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_LSE:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 2430              		.loc 1 1203 31 view .LVU800
 2431 007a C018     		adds	r0, r0, r3
 2432 007c FFF7FEFF 		bl	__aeabi_uidiv
 2433              	.LVL181:
 2434              		.loc 1 1203 18 view .LVU801
 2435 0080 83B2     		uxth	r3, r0
 2436              	.LVL182:
1204:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2437              		.loc 1 1204 9 is_stmt 1 view .LVU802
1148:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2438              		.loc 1 1148 21 is_stmt 0 view .LVU803
 2439 0082 0020     		movs	r0, #0
 2440              	.LVL183:
 2441              	.L241:
1205:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1206:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       default:
1207:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         ret = HAL_ERROR;
1208:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1209:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1210:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp = usartdiv & 0xFFF0U;
 2442              		.loc 1 1211 5 is_stmt 1 view .LVU804
 2443              		.loc 1 1211 13 is_stmt 0 view .LVU805
 2444 0084 1900     		movs	r1, r3
 2445 0086 0F22     		movs	r2, #15
1212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2446              		.loc 1 1212 16 view .LVU806
 2447 0088 1B07     		lsls	r3, r3, #28
 2448              	.LVL184:
1211:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2449              		.loc 1 1211 13 view .LVU807
 2450 008a 9143     		bics	r1, r2
 2451              	.LVL185:
 2452              		.loc 1 1212 5 is_stmt 1 view .LVU808
1213:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->Instance->BRR = brrtemp;
 2453              		.loc 1 1213 5 view .LVU809
1212:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2454              		.loc 1 1212 16 is_stmt 0 view .LVU810
 2455 008c 5B0F     		lsrs	r3, r3, #29
 2456              		.loc 1 1213 26 view .LVU811
 2457 008e 0B43     		orrs	r3, r1
 2458 0090 E360     		str	r3, [r4, #12]
 2459              	.LVL186:
 2460              	.L246:
1214:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1215:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1216:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     switch (clocksource)
1218:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1219:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK1:
1220:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
1221:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1222:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_HSI:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
1224:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1225:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
1227:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1228:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_LSE:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
1230:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1231:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
1232:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       default:
1233:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         ret = HAL_ERROR;
1234:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
1235:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1236:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1237:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1238:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return ret;
 2461              		.loc 1 1238 3 is_stmt 1 view .LVU812
1239:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1240:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2462              		.loc 1 1240 1 is_stmt 0 view .LVU813
 2463              		@ sp needed
 2464 0092 70BD     		pop	{r4, r5, r6, pc}
 2465              	.LVL187:
 2466              	.L242:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2467              		.loc 1 1203 9 is_stmt 1 view .LVU814
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2468              		.loc 1 1203 31 is_stmt 0 view .LVU815
 2469 0094 5968     		ldr	r1, [r3, #4]
 2470 0096 8023     		movs	r3, #128
 2471              	.LVL188:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2472              		.loc 1 1203 31 view .LVU816
 2473 0098 4808     		lsrs	r0, r1, #1
 2474              	.LVL189:
1203:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2475              		.loc 1 1203 31 view .LVU817
 2476 009a 5B02     		lsls	r3, r3, #9
 2477 009c EDE7     		b	.L254
 2478              	.LVL190:
 2479              	.L252:
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2480              		.loc 1 1191 5 view .LVU818
 2481 009e 0120     		movs	r0, #1
 2482              	.LVL191:
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2483              		.loc 1 1191 5 view .LVU819
 2484 00a0 0023     		movs	r3, #0
 2485              	.LVL192:
1191:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2486              		.loc 1 1191 5 view .LVU820
 2487 00a2 EFE7     		b	.L241
 2488              	.LVL193:
 2489              	.L240:
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2490              		.loc 1 1217 5 is_stmt 1 view .LVU821
 2491 00a4 0828     		cmp	r0, #8
 2492 00a6 1AD8     		bhi	.L253
 2493 00a8 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 2494              	.L248:
 2495 00ac 0F       		.byte	(.L249-.L248)/2
 2496 00ad 19       		.byte	(.L253-.L248)/2
 2497 00ae 05       		.byte	(.L250-.L248)/2
 2498 00af 19       		.byte	(.L253-.L248)/2
 2499 00b0 0F       		.byte	(.L249-.L248)/2
 2500 00b1 19       		.byte	(.L253-.L248)/2
 2501 00b2 19       		.byte	(.L253-.L248)/2
 2502 00b3 19       		.byte	(.L253-.L248)/2
 2503 00b4 14       		.byte	(.L247-.L248)/2
 2504 00b5 00       		.p2align 1
 2505              	.L250:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2506              		.loc 1 1223 9 view .LVU822
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2507              		.loc 1 1223 43 is_stmt 0 view .LVU823
 2508 00b6 5968     		ldr	r1, [r3, #4]
 2509 00b8 104B     		ldr	r3, .L256+24
 2510              	.LVL194:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2511              		.loc 1 1223 43 view .LVU824
 2512 00ba 4808     		lsrs	r0, r1, #1
 2513              	.LVL195:
 2514              	.L255:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2515              		.loc 1 1223 43 view .LVU825
 2516 00bc C018     		adds	r0, r0, r3
 2517 00be FFF7FEFF 		bl	__aeabi_uidiv
 2518              	.LVL196:
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2519              		.loc 1 1223 43 view .LVU826
 2520 00c2 80B2     		uxth	r0, r0
1223:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2521              		.loc 1 1223 30 view .LVU827
 2522 00c4 E060     		str	r0, [r4, #12]
1224:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
 2523              		.loc 1 1224 9 is_stmt 1 view .LVU828
1148:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2524              		.loc 1 1148 21 is_stmt 0 view .LVU829
 2525 00c6 0020     		movs	r0, #0
 2526 00c8 E3E7     		b	.L246
 2527              	.LVL197:
 2528              	.L249:
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2529              		.loc 1 1226 9 is_stmt 1 view .LVU830
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2530              		.loc 1 1226 43 is_stmt 0 view .LVU831
 2531 00ca 5968     		ldr	r1, [r3, #4]
 2532 00cc E123     		movs	r3, #225
 2533              	.LVL198:
1226:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2534              		.loc 1 1226 43 view .LVU832
 2535 00ce 4808     		lsrs	r0, r1, #1
 2536 00d0 DB03     		lsls	r3, r3, #15
 2537 00d2 F3E7     		b	.L255
 2538              	.LVL199:
 2539              	.L247:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2540              		.loc 1 1229 9 is_stmt 1 view .LVU833
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2541              		.loc 1 1229 43 is_stmt 0 view .LVU834
 2542 00d4 5968     		ldr	r1, [r3, #4]
 2543 00d6 8023     		movs	r3, #128
 2544              	.LVL200:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2545              		.loc 1 1229 43 view .LVU835
 2546 00d8 4808     		lsrs	r0, r1, #1
 2547              	.LVL201:
1229:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         break;
 2548              		.loc 1 1229 43 view .LVU836
 2549 00da 1B02     		lsls	r3, r3, #8
 2550 00dc EEE7     		b	.L255
 2551              	.LVL202:
 2552              	.L253:
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2553              		.loc 1 1217 5 view .LVU837
 2554 00de 0120     		movs	r0, #1
 2555              	.LVL203:
1217:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2556              		.loc 1 1217 5 view .LVU838
 2557 00e0 D7E7     		b	.L246
 2558              	.L257:
 2559 00e2 C046     		.align	2
 2560              	.L256:
 2561 00e4 F369FFFF 		.word	-38413
 2562 00e8 FFCFFFFF 		.word	-12289
 2563 00ec FFF4FFFF 		.word	-2817
 2564 00f0 00100240 		.word	1073876992
 2565 00f4 00000000 		.word	.LANCHOR2
 2566 00f8 0048E801 		.word	32000000
 2567 00fc 0024F400 		.word	16000000
 2568              		.cfi_endproc
 2569              	.LFE48:
 2571              		.section	.text.HAL_UART_Init,"ax",%progbits
 2572              		.align	1
 2573              		.global	HAL_UART_Init
 2574              		.syntax unified
 2575              		.code	16
 2576              		.thumb_func
 2578              	HAL_UART_Init:
 2579              	.LVL204:
 2580              	.LFB49:
1241:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1242:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1243:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Initialize the UART mode according to the specified
1244:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
1245:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart: UART handle.
1246:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1247:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1248:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
1249:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2581              		.loc 1 1249 1 is_stmt 1 view -0
 2582              		.cfi_startproc
 2583              		@ args = 0, pretend = 0, frame = 0
 2584              		@ frame_needed = 0, uses_anonymous_args = 0
1250:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the UART handle allocation */
1251:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart == NULL)
 2585              		.loc 1 1251 3 view .LVU840
1249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the UART handle allocation */
 2586              		.loc 1 1249 1 is_stmt 0 view .LVU841
 2587 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2588              	.LCFI9:
 2589              		.cfi_def_cfa_offset 24
 2590              		.cfi_offset 3, -24
 2591              		.cfi_offset 4, -20
 2592              		.cfi_offset 5, -16
 2593              		.cfi_offset 6, -12
 2594              		.cfi_offset 7, -8
 2595              		.cfi_offset 14, -4
1249:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check the UART handle allocation */
 2596              		.loc 1 1249 1 view .LVU842
 2597 0002 041E     		subs	r4, r0, #0
 2598              		.loc 1 1251 5 view .LVU843
 2599 0004 01D1     		bne	.L259
 2600              	.LVL205:
 2601              	.L262:
1252:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1253:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_ERROR;
 2602              		.loc 1 1253 12 view .LVU844
 2603 0006 0120     		movs	r0, #1
 2604              	.LVL206:
 2605              	.L260:
1254:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1255:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1256:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
1257:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1258:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
1259:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
1260:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1261:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1262:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1263:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Check the parameters */
1264:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
1265:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1266:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_RESET)
1268:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1269:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Allocate lock resource and initialize it */
1270:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->Lock = HAL_UNLOCKED;
1271:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1272:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Init the low level hardware : GPIO, CLOCK */
1273:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     //HAL_UART_MspInit(huart);
1274:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1275:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->gState = HAL_UART_STATE_BUSY;
1277:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1278:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Disable the Peripheral */
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   __HAL_UART_DISABLE(huart);
1280:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1281:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Set the UART Communication parameters */
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
1283:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1284:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_ERROR;
1285:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1286:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1287:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
1288:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1289:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     //UART_AdvFeatureConfig(huart);
1290:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1291:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1292:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* In asynchronous mode, the following bits must be kept cleared:
1293:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
1294:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 
1295:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR2_LINEN)
1296:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1297:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
1299:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1300:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR3_SCEN)
1301:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR3_IREN)
1302:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
1303:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1304:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
1305:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1306:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1307:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #if defined (USART_CR3_IREN)
1308:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN));
1309:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #else
1310:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
1311:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1312:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
1313:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1314:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Enable the Peripheral */
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   __HAL_UART_ENABLE(huart);
1316:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1317:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
1318:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   return (UART_CheckIdleState(huart));
1319:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2606              		.loc 1 1319 1 view .LVU845
 2607              		@ sp needed
 2608 0008 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2609              	.LVL207:
 2610              	.L259:
1256:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2611              		.loc 1 1256 3 is_stmt 1 view .LVU846
1264:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
 2612              		.loc 1 1264 5 view .LVU847
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2613              		.loc 1 1267 3 view .LVU848
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2614              		.loc 1 1267 11 is_stmt 0 view .LVU849
 2615 000a 0600     		movs	r6, r0
 2616 000c 6936     		adds	r6, r6, #105
 2617 000e 3378     		ldrb	r3, [r6]
 2618 0010 DAB2     		uxtb	r2, r3
1267:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2619              		.loc 1 1267 5 view .LVU850
 2620 0012 002B     		cmp	r3, #0
 2621 0014 02D1     		bne	.L261
1270:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2622              		.loc 1 1270 5 is_stmt 1 view .LVU851
1270:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2623              		.loc 1 1270 17 is_stmt 0 view .LVU852
 2624 0016 0300     		movs	r3, r0
 2625 0018 6833     		adds	r3, r3, #104
 2626 001a 1A70     		strb	r2, [r3]
 2627              	.L261:
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2628              		.loc 1 1276 3 is_stmt 1 view .LVU853
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2629              		.loc 1 1276 17 is_stmt 0 view .LVU854
 2630 001c 2423     		movs	r3, #36
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2631              		.loc 1 1279 3 view .LVU855
 2632 001e 0127     		movs	r7, #1
1276:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2633              		.loc 1 1276 17 view .LVU856
 2634 0020 3370     		strb	r3, [r6]
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2635              		.loc 1 1279 3 is_stmt 1 view .LVU857
 2636 0022 2568     		ldr	r5, [r4]
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2637              		.loc 1 1282 7 is_stmt 0 view .LVU858
 2638 0024 2000     		movs	r0, r4
 2639              	.LVL208:
1279:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2640              		.loc 1 1279 3 view .LVU859
 2641 0026 2B68     		ldr	r3, [r5]
 2642 0028 BB43     		bics	r3, r7
 2643 002a 2B60     		str	r3, [r5]
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2644              		.loc 1 1282 3 is_stmt 1 view .LVU860
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2645              		.loc 1 1282 7 is_stmt 0 view .LVU861
 2646 002c FFF7FEFF 		bl	UART_SetConfig
 2647              	.LVL209:
1282:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2648              		.loc 1 1282 6 view .LVU862
 2649 0030 B842     		cmp	r0, r7
 2650 0032 E8D0     		beq	.L262
1287:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2651              		.loc 1 1287 3 is_stmt 1 view .LVU863
1290:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2652              		.loc 1 1290 3 view .LVU864
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2653              		.loc 1 1298 3 view .LVU865
 2654 0034 6B68     		ldr	r3, [r5, #4]
 2655 0036 0A4A     		ldr	r2, .L266
 2656              	.LBB22:
 2657              	.LBB23:
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2658              		.loc 1 1097 20 is_stmt 0 view .LVU866
 2659 0038 0020     		movs	r0, #0
 2660              	.LBE23:
 2661              	.LBE22:
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2662              		.loc 1 1298 3 view .LVU867
 2663 003a 1340     		ands	r3, r2
1310:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2664              		.loc 1 1310 3 view .LVU868
 2665 003c 0822     		movs	r2, #8
1298:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2666              		.loc 1 1298 3 view .LVU869
 2667 003e 6B60     		str	r3, [r5, #4]
1310:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** #endif
 2668              		.loc 1 1310 3 is_stmt 1 view .LVU870
 2669 0040 AB68     		ldr	r3, [r5, #8]
 2670 0042 9343     		bics	r3, r2
 2671 0044 AB60     		str	r3, [r5, #8]
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2672              		.loc 1 1315 3 view .LVU871
 2673 0046 2B68     		ldr	r3, [r5]
 2674              	.LBB27:
 2675              	.LBB24:
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2676              		.loc 1 1134 18 is_stmt 0 view .LVU872
 2677 0048 2200     		movs	r2, r4
 2678              	.LBE24:
 2679              	.LBE27:
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2680              		.loc 1 1315 3 view .LVU873
 2681 004a 1F43     		orrs	r7, r3
 2682              	.LBB28:
 2683              	.LBB25:
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2684              		.loc 1 1133 18 view .LVU874
 2685 004c 2023     		movs	r3, #32
 2686              	.LBE25:
 2687              	.LBE28:
1315:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2688              		.loc 1 1315 3 view .LVU875
 2689 004e 2F60     		str	r7, [r5]
1318:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2690              		.loc 1 1318 3 is_stmt 1 view .LVU876
 2691              	.LVL210:
 2692              	.LBB29:
 2693              	.LBI22:
1090:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2694              		.loc 1 1090 19 view .LVU877
 2695              	.LBB26:
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2696              		.loc 1 1097 3 view .LVU878
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2697              		.loc 1 1134 18 is_stmt 0 view .LVU879
 2698 0050 6A32     		adds	r2, r2, #106
1097:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2699              		.loc 1 1097 20 view .LVU880
 2700 0052 E066     		str	r0, [r4, #108]
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2701              		.loc 1 1133 3 is_stmt 1 view .LVU881
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2702              		.loc 1 1137 3 is_stmt 0 view .LVU882
 2703 0054 6834     		adds	r4, r4, #104
 2704              	.LVL211:
1133:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 2705              		.loc 1 1133 18 view .LVU883
 2706 0056 3370     		strb	r3, [r6]
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2707              		.loc 1 1134 3 is_stmt 1 view .LVU884
1134:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2708              		.loc 1 1134 18 is_stmt 0 view .LVU885
 2709 0058 1370     		strb	r3, [r2]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2710              		.loc 1 1137 3 is_stmt 1 view .LVU886
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2711              		.loc 1 1137 3 view .LVU887
 2712 005a 2070     		strb	r0, [r4]
1137:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2713              		.loc 1 1137 3 view .LVU888
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2714              		.loc 1 1139 3 view .LVU889
 2715              	.LVL212:
1139:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2716              		.loc 1 1139 3 is_stmt 0 view .LVU890
 2717              	.LBE26:
 2718              	.LBE29:
1318:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2719              		.loc 1 1318 11 view .LVU891
 2720 005c D4E7     		b	.L260
 2721              	.L267:
 2722 005e C046     		.align	2
 2723              	.L266:
 2724 0060 FFF7FFFF 		.word	-2049
 2725              		.cfi_endproc
 2726              	.LFE49:
 2728              		.section	.text.HAL_UART_Receive,"ax",%progbits
 2729              		.align	1
 2730              		.global	HAL_UART_Receive
 2731              		.syntax unified
 2732              		.code	16
 2733              		.thumb_func
 2735              	HAL_UART_Receive:
 2736              	.LVL213:
 2737              	.LFB50:
1320:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1321:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1322:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Receive an amount of data in blocking mode.
1323:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart: UART handle.
1324:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param pData: pointer to data buffer.
1325:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Size: amount of data to be received.
1326:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Timeout: Timeout duration.
1327:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1328:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1329:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1330:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1331:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1332:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1333:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 2738              		.loc 1 1334 1 is_stmt 1 view -0
 2739              		.cfi_startproc
 2740              		@ args = 0, pretend = 0, frame = 8
 2741              		@ frame_needed = 0, uses_anonymous_args = 0
1335:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2742              		.loc 1 1335 3 view .LVU893
1336:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t uhMask;
 2743              		.loc 1 1336 3 view .LVU894
1337:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0;
 2744              		.loc 1 1337 3 view .LVU895
1338:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1339:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check that a Rx process is not already ongoing */
1340:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 2745              		.loc 1 1340 3 view .LVU896
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2746              		.loc 1 1334 1 is_stmt 0 view .LVU897
 2747 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2748              	.LCFI10:
 2749              		.cfi_def_cfa_offset 20
 2750              		.cfi_offset 4, -20
 2751              		.cfi_offset 5, -16
 2752              		.cfi_offset 6, -12
 2753              		.cfi_offset 7, -8
 2754              		.cfi_offset 14, -4
 2755 0002 85B0     		sub	sp, sp, #20
 2756              	.LCFI11:
 2757              		.cfi_def_cfa_offset 40
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2758              		.loc 1 1334 1 view .LVU898
 2759 0004 0393     		str	r3, [sp, #12]
 2760              		.loc 1 1340 11 view .LVU899
 2761 0006 0300     		movs	r3, r0
 2762              	.LVL214:
 2763              		.loc 1 1340 11 view .LVU900
 2764 0008 6A33     		adds	r3, r3, #106
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2765              		.loc 1 1334 1 view .LVU901
 2766 000a 1600     		movs	r6, r2
 2767              		.loc 1 1340 11 view .LVU902
 2768 000c 1A78     		ldrb	r2, [r3]
 2769              	.LVL215:
1334:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 2770              		.loc 1 1334 1 view .LVU903
 2771 000e 0400     		movs	r4, r0
 2772 0010 0D00     		movs	r5, r1
1341:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0U))
1343:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1344:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return  HAL_ERROR;
1345:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1346:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1347:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1348:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be 
1349:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        handled through a u16 cast. */
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1351:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((((uint32_t)pData)&1U) != 0U)
1353:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1354:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return  HAL_ERROR;
1355:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1356:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1357:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1358:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Locked */
1359:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_LOCK(huart);
 2773              		.loc 1 1359 5 view .LVU904
 2774 0012 0220     		movs	r0, #2
 2775              	.LVL216:
1340:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 2776              		.loc 1 1340 5 view .LVU905
 2777 0014 202A     		cmp	r2, #32
 2778 0016 3BD1     		bne	.L269
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2779              		.loc 1 1342 5 is_stmt 1 view .LVU906
1344:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 2780              		.loc 1 1344 15 is_stmt 0 view .LVU907
 2781 0018 0138     		subs	r0, r0, #1
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2782              		.loc 1 1342 7 view .LVU908
 2783 001a 0029     		cmp	r1, #0
 2784 001c 38D0     		beq	.L269
1342:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2785              		.loc 1 1342 25 discriminator 1 view .LVU909
 2786 001e 002E     		cmp	r6, #0
 2787 0020 36D0     		beq	.L269
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2788              		.loc 1 1350 5 is_stmt 1 view .LVU910
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2789              		.loc 1 1350 8 is_stmt 0 view .LVU911
 2790 0022 8022     		movs	r2, #128
 2791 0024 A168     		ldr	r1, [r4, #8]
 2792              	.LVL217:
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2793              		.loc 1 1350 8 view .LVU912
 2794 0026 5201     		lsls	r2, r2, #5
 2795 0028 9142     		cmp	r1, r2
 2796 002a 04D1     		bne	.L270
1350:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2797              		.loc 1 1350 56 discriminator 1 view .LVU913
 2798 002c 2269     		ldr	r2, [r4, #16]
 2799 002e 002A     		cmp	r2, #0
 2800 0030 01D1     		bne	.L270
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2801              		.loc 1 1352 7 is_stmt 1 view .LVU914
1352:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2802              		.loc 1 1352 9 is_stmt 0 view .LVU915
 2803 0032 0542     		tst	r5, r0
 2804 0034 2CD1     		bne	.L269
 2805              	.L270:
 2806              		.loc 1 1359 5 is_stmt 1 view .LVU916
 2807              		.loc 1 1359 5 view .LVU917
 2808 0036 2200     		movs	r2, r4
 2809 0038 6832     		adds	r2, r2, #104
 2810 003a 1178     		ldrb	r1, [r2]
 2811 003c 0220     		movs	r0, #2
 2812 003e 0129     		cmp	r1, #1
 2813 0040 26D0     		beq	.L269
 2814              		.loc 1 1359 5 discriminator 2 view .LVU918
 2815 0042 0121     		movs	r1, #1
 2816 0044 1170     		strb	r1, [r2]
 2817              		.loc 1 1359 5 discriminator 2 view .LVU919
1360:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1361:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2818              		.loc 1 1361 5 discriminator 2 view .LVU920
 2819              		.loc 1 1361 22 is_stmt 0 discriminator 2 view .LVU921
 2820 0046 0022     		movs	r2, #0
 2821 0048 E266     		str	r2, [r4, #108]
1362:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2822              		.loc 1 1362 5 is_stmt 1 discriminator 2 view .LVU922
 2823              		.loc 1 1362 20 is_stmt 0 discriminator 2 view .LVU923
 2824 004a 2232     		adds	r2, r2, #34
 2825 004c 1A70     		strb	r2, [r3]
1363:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1364:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Init tickstart for timeout managment*/
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 2826              		.loc 1 1365 5 is_stmt 1 discriminator 2 view .LVU924
 2827              		.loc 1 1365 17 is_stmt 0 discriminator 2 view .LVU925
 2828 004e FFF7FEFF 		bl	HAL_GetTick
 2829              	.LVL218:
1366:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferSize = Size;
 2830              		.loc 1 1367 23 discriminator 2 view .LVU926
 2831 0052 2300     		movs	r3, r4
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
1369:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1370:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Computation of UART mask to apply to RDR register */
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     UART_MASK_COMPUTATION(huart);
 2832              		.loc 1 1371 5 discriminator 2 view .LVU927
 2833 0054 8021     		movs	r1, #128
 2834 0056 A268     		ldr	r2, [r4, #8]
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 2835              		.loc 1 1367 23 discriminator 2 view .LVU928
 2836 0058 5833     		adds	r3, r3, #88
 2837 005a 1E80     		strh	r6, [r3]
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 2838              		.loc 1 1368 24 discriminator 2 view .LVU929
 2839 005c 5E80     		strh	r6, [r3, #2]
1365:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2840              		.loc 1 1365 17 discriminator 2 view .LVU930
 2841 005e 0290     		str	r0, [sp, #8]
 2842              	.LVL219:
1367:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 2843              		.loc 1 1367 5 is_stmt 1 discriminator 2 view .LVU931
1368:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxXferCount = Size;
 2844              		.loc 1 1368 5 discriminator 2 view .LVU932
 2845              		.loc 1 1371 5 discriminator 2 view .LVU933
 2846              		.loc 1 1371 5 discriminator 2 view .LVU934
 2847 0060 4901     		lsls	r1, r1, #5
 2848 0062 0433     		adds	r3, r3, #4
 2849 0064 8A42     		cmp	r2, r1
 2850 0066 17D1     		bne	.L271
 2851              		.loc 1 1371 5 discriminator 1 view .LVU935
 2852 0068 2269     		ldr	r2, [r4, #16]
 2853 006a 002A     		cmp	r2, #0
 2854 006c 12D1     		bne	.L272
 2855              		.loc 1 1371 5 discriminator 3 view .LVU936
 2856 006e 1E4A     		ldr	r2, .L288
 2857              	.L287:
 2858              		.loc 1 1371 5 is_stmt 0 discriminator 8 view .LVU937
 2859 0070 1A80     		strh	r2, [r3]
 2860              	.L273:
 2861              		.loc 1 1371 5 is_stmt 1 discriminator 10 view .LVU938
1372:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2862              		.loc 1 1372 5 discriminator 10 view .LVU939
1373:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1374:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* as long as data have to be received */
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->RxXferCount > 0U)
1376:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       huart->RxXferCount--;
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1379:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1380:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1381:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 2863              		.loc 1 1382 10 is_stmt 0 discriminator 10 view .LVU940
 2864 0072 8027     		movs	r7, #128
1372:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2865              		.loc 1 1372 12 discriminator 10 view .LVU941
 2866 0074 1E88     		ldrh	r6, [r3]
 2867              	.LVL220:
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2868              		.loc 1 1375 5 is_stmt 1 discriminator 10 view .LVU942
 2869              		.loc 1 1382 10 is_stmt 0 discriminator 10 view .LVU943
 2870 0076 7F01     		lsls	r7, r7, #5
 2871              	.LVL221:
 2872              	.L274:
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2873              		.loc 1 1375 30 is_stmt 1 view .LVU944
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2874              		.loc 1 1375 16 is_stmt 0 view .LVU945
 2875 0078 2200     		movs	r2, r4
 2876 007a 5A32     		adds	r2, r2, #90
 2877 007c 1388     		ldrh	r3, [r2]
 2878 007e 98B2     		uxth	r0, r3
1375:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 2879              		.loc 1 1375 30 view .LVU946
 2880 0080 002B     		cmp	r3, #0
 2881 0082 10D1     		bne	.L277
1383:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tmp = (uint16_t*) pData ;
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
1387:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1388:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
1389:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1391:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1392:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1393:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1394:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1395:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_READY;
 2882              		.loc 1 1395 5 is_stmt 1 view .LVU947
 2883              		.loc 1 1395 20 is_stmt 0 view .LVU948
 2884 0084 2300     		movs	r3, r4
 2885 0086 2022     		movs	r2, #32
 2886 0088 6A33     		adds	r3, r3, #106
1396:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1397:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Unlocked */
1398:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
 2887              		.loc 1 1398 5 view .LVU949
 2888 008a 6834     		adds	r4, r4, #104
 2889              	.LVL222:
1395:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 2890              		.loc 1 1395 20 view .LVU950
 2891 008c 1A70     		strb	r2, [r3]
 2892              		.loc 1 1398 5 is_stmt 1 view .LVU951
 2893              		.loc 1 1398 5 view .LVU952
 2894 008e 2070     		strb	r0, [r4]
 2895              		.loc 1 1398 5 view .LVU953
1399:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1400:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_OK;
 2896              		.loc 1 1400 5 view .LVU954
 2897              	.LVL223:
 2898              	.L269:
1401:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1402:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1403:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1404:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_BUSY;
1405:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1406:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 2899              		.loc 1 1406 1 is_stmt 0 view .LVU955
 2900 0090 05B0     		add	sp, sp, #20
 2901              		@ sp needed
 2902              	.LVL224:
 2903              		.loc 1 1406 1 view .LVU956
 2904 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 2905              	.LVL225:
 2906              	.L272:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2907              		.loc 1 1371 5 is_stmt 1 discriminator 4 view .LVU957
 2908 0094 FF22     		movs	r2, #255
 2909 0096 EBE7     		b	.L287
 2910              	.L271:
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2911              		.loc 1 1371 5 discriminator 2 view .LVU958
 2912 0098 002A     		cmp	r2, #0
 2913 009a EAD1     		bne	.L273
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2914              		.loc 1 1371 5 discriminator 5 view .LVU959
 2915 009c 2269     		ldr	r2, [r4, #16]
 2916 009e 002A     		cmp	r2, #0
 2917 00a0 F8D0     		beq	.L272
1371:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     uhMask = huart->Mask;
 2918              		.loc 1 1371 5 discriminator 8 view .LVU960
 2919 00a2 7F22     		movs	r2, #127
 2920 00a4 E4E7     		b	.L287
 2921              	.LVL226:
 2922              	.L277:
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 2923              		.loc 1 1377 7 view .LVU961
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 2924              		.loc 1 1377 12 is_stmt 0 view .LVU962
 2925 00a6 1388     		ldrh	r3, [r2]
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2926              		.loc 1 1378 10 view .LVU963
 2927 00a8 2021     		movs	r1, #32
1377:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 2928              		.loc 1 1377 25 view .LVU964
 2929 00aa 013B     		subs	r3, r3, #1
 2930 00ac 9BB2     		uxth	r3, r3
 2931 00ae 1380     		strh	r3, [r2]
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2932              		.loc 1 1378 7 is_stmt 1 view .LVU965
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2933              		.loc 1 1378 10 is_stmt 0 view .LVU966
 2934 00b0 039B     		ldr	r3, [sp, #12]
 2935 00b2 0022     		movs	r2, #0
 2936 00b4 0093     		str	r3, [sp]
 2937 00b6 2000     		movs	r0, r4
 2938 00b8 029B     		ldr	r3, [sp, #8]
 2939 00ba FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 2940              	.LVL227:
1378:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2941              		.loc 1 1378 9 view .LVU967
 2942 00be 0028     		cmp	r0, #0
 2943 00c0 10D1     		bne	.L283
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2944              		.loc 1 1382 7 is_stmt 1 view .LVU968
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2945              		.loc 1 1382 10 is_stmt 0 view .LVU969
 2946 00c2 A268     		ldr	r2, [r4, #8]
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2947              		.loc 1 1385 32 view .LVU970
 2948 00c4 2368     		ldr	r3, [r4]
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2949              		.loc 1 1382 10 view .LVU971
 2950 00c6 BA42     		cmp	r2, r7
 2951 00c8 07D1     		bne	.L275
1382:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 2952              		.loc 1 1382 58 discriminator 1 view .LVU972
 2953 00ca 2269     		ldr	r2, [r4, #16]
 2954 00cc 002A     		cmp	r2, #0
 2955 00ce 04D1     		bne	.L275
1384:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 2956              		.loc 1 1384 9 is_stmt 1 view .LVU973
 2957              	.LVL228:
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2958              		.loc 1 1385 9 view .LVU974
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2959              		.loc 1 1385 42 is_stmt 0 view .LVU975
 2960 00d0 9B8C     		ldrh	r3, [r3, #36]
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2961              		.loc 1 1385 16 view .LVU976
 2962 00d2 3340     		ands	r3, r6
1385:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData +=2U;
 2963              		.loc 1 1385 14 view .LVU977
 2964 00d4 2B80     		strh	r3, [r5]
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2965              		.loc 1 1386 9 is_stmt 1 view .LVU978
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2966              		.loc 1 1386 15 is_stmt 0 view .LVU979
 2967 00d6 0235     		adds	r5, r5, #2
 2968              	.LVL229:
1386:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2969              		.loc 1 1386 15 view .LVU980
 2970 00d8 CEE7     		b	.L274
 2971              	.LVL230:
 2972              	.L275:
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2973              		.loc 1 1390 9 is_stmt 1 view .LVU981
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2974              		.loc 1 1390 45 is_stmt 0 view .LVU982
 2975 00da 9B8C     		ldrh	r3, [r3, #36]
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2976              		.loc 1 1390 20 view .LVU983
 2977 00dc 3340     		ands	r3, r6
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2978              		.loc 1 1390 18 view .LVU984
 2979 00de 2B70     		strb	r3, [r5]
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2980              		.loc 1 1390 15 view .LVU985
 2981 00e0 0135     		adds	r5, r5, #1
 2982              	.LVL231:
1390:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2983              		.loc 1 1390 15 view .LVU986
 2984 00e2 C9E7     		b	.L274
 2985              	.L283:
1380:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 2986              		.loc 1 1380 16 view .LVU987
 2987 00e4 0320     		movs	r0, #3
 2988 00e6 D3E7     		b	.L269
 2989              	.L289:
 2990              		.align	2
 2991              	.L288:
 2992 00e8 FF010000 		.word	511
 2993              		.cfi_endproc
 2994              	.LFE50:
 2996              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 2997              		.align	1
 2998              		.global	HAL_UART_Transmit
 2999              		.syntax unified
 3000              		.code	16
 3001              		.thumb_func
 3003              	HAL_UART_Transmit:
 3004              	.LVL232:
 3005              	.LFB51:
1407:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1408:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** /**
1409:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @brief Send an amount of data in blocking mode.
1410:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param huart: UART handle.
1411:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param pData: Pointer to data buffer.
1412:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Size: Amount of data to be sent.
1413:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @param Timeout: Timeout duration.
1414:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1415:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1416:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1417:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1418:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   * @retval HAL status
1419:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   */
1420:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** {
 3006              		.loc 1 1421 1 is_stmt 1 view -0
 3007              		.cfi_startproc
 3008              		@ args = 0, pretend = 0, frame = 8
 3009              		@ frame_needed = 0, uses_anonymous_args = 0
1422:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3010              		.loc 1 1422 3 view .LVU989
1423:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3011              		.loc 1 1423 3 view .LVU990
1424:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1425:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   /* Check that a Tx process is not already ongoing */
1426:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_READY)
 3012              		.loc 1 1426 3 view .LVU991
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3013              		.loc 1 1421 1 is_stmt 0 view .LVU992
 3014 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3015              	.LCFI12:
 3016              		.cfi_def_cfa_offset 20
 3017              		.cfi_offset 4, -20
 3018              		.cfi_offset 5, -16
 3019              		.cfi_offset 6, -12
 3020              		.cfi_offset 7, -8
 3021              		.cfi_offset 14, -4
 3022              		.loc 1 1426 11 view .LVU993
 3023 0002 0700     		movs	r7, r0
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3024              		.loc 1 1421 1 view .LVU994
 3025 0004 85B0     		sub	sp, sp, #20
 3026              	.LCFI13:
 3027              		.cfi_def_cfa_offset 40
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3028              		.loc 1 1421 1 view .LVU995
 3029 0006 0393     		str	r3, [sp, #12]
 3030              		.loc 1 1426 11 view .LVU996
 3031 0008 6937     		adds	r7, r7, #105
 3032 000a 3B78     		ldrb	r3, [r7]
 3033              	.LVL233:
1421:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   uint16_t* tmp;
 3034              		.loc 1 1421 1 view .LVU997
 3035 000c 0400     		movs	r4, r0
 3036 000e 0D00     		movs	r5, r1
 3037 0010 1600     		movs	r6, r2
1427:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0U))
1429:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1430:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return  HAL_ERROR;
1431:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1432:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1433:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input paramter 
1434:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be 
1435:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****        handled through a u16 cast. */
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1437:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if((((uint32_t)pData)&1U) != 0U)
1439:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1440:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return  HAL_ERROR;
1441:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1442:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1443:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1444:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Locked */
1445:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_LOCK(huart);
 3038              		.loc 1 1445 5 view .LVU998
 3039 0012 0220     		movs	r0, #2
 3040              	.LVL234:
1426:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
 3041              		.loc 1 1426 5 view .LVU999
 3042 0014 202B     		cmp	r3, #32
 3043 0016 46D1     		bne	.L291
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3044              		.loc 1 1428 5 is_stmt 1 view .LVU1000
1430:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
 3045              		.loc 1 1430 15 is_stmt 0 view .LVU1001
 3046 0018 0138     		subs	r0, r0, #1
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3047              		.loc 1 1428 7 view .LVU1002
 3048 001a 0029     		cmp	r1, #0
 3049 001c 43D0     		beq	.L291
1428:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3050              		.loc 1 1428 25 discriminator 1 view .LVU1003
 3051 001e 002A     		cmp	r2, #0
 3052 0020 41D0     		beq	.L291
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3053              		.loc 1 1436 5 is_stmt 1 view .LVU1004
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3054              		.loc 1 1436 8 is_stmt 0 view .LVU1005
 3055 0022 8023     		movs	r3, #128
 3056 0024 A268     		ldr	r2, [r4, #8]
 3057              	.LVL235:
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3058              		.loc 1 1436 8 view .LVU1006
 3059 0026 5B01     		lsls	r3, r3, #5
 3060 0028 9A42     		cmp	r2, r3
 3061 002a 04D1     		bne	.L292
1436:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3062              		.loc 1 1436 56 discriminator 1 view .LVU1007
 3063 002c 2369     		ldr	r3, [r4, #16]
 3064 002e 002B     		cmp	r3, #0
 3065 0030 01D1     		bne	.L292
1438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3066              		.loc 1 1438 7 is_stmt 1 view .LVU1008
1438:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3067              		.loc 1 1438 9 is_stmt 0 view .LVU1009
 3068 0032 0142     		tst	r1, r0
 3069 0034 37D1     		bne	.L291
 3070              	.L292:
 3071              		.loc 1 1445 5 is_stmt 1 view .LVU1010
 3072              		.loc 1 1445 5 view .LVU1011
 3073 0036 2300     		movs	r3, r4
 3074 0038 6833     		adds	r3, r3, #104
 3075 003a 1A78     		ldrb	r2, [r3]
 3076 003c 0220     		movs	r0, #2
 3077 003e 012A     		cmp	r2, #1
 3078 0040 31D0     		beq	.L291
 3079              		.loc 1 1445 5 discriminator 2 view .LVU1012
 3080 0042 0122     		movs	r2, #1
 3081 0044 1A70     		strb	r2, [r3]
 3082              		.loc 1 1445 5 discriminator 2 view .LVU1013
1446:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1447:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3083              		.loc 1 1447 5 discriminator 2 view .LVU1014
 3084              		.loc 1 1447 22 is_stmt 0 discriminator 2 view .LVU1015
 3085 0046 0023     		movs	r3, #0
 3086 0048 E366     		str	r3, [r4, #108]
1448:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3087              		.loc 1 1448 5 is_stmt 1 discriminator 2 view .LVU1016
 3088              		.loc 1 1448 19 is_stmt 0 discriminator 2 view .LVU1017
 3089 004a 2133     		adds	r3, r3, #33
 3090 004c 3B70     		strb	r3, [r7]
1449:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1450:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Init tickstart for timeout managment*/
1451:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 3091              		.loc 1 1451 5 is_stmt 1 discriminator 2 view .LVU1018
 3092              		.loc 1 1451 17 is_stmt 0 discriminator 2 view .LVU1019
 3093 004e FFF7FEFF 		bl	HAL_GetTick
 3094              	.LVL236:
1452:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferSize = Size;
 3095              		.loc 1 1453 23 discriminator 2 view .LVU1020
 3096 0052 2300     		movs	r3, r4
 3097 0054 5033     		adds	r3, r3, #80
 3098 0056 1E80     		strh	r6, [r3]
1454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferCount = Size;
 3099              		.loc 1 1454 24 discriminator 2 view .LVU1021
 3100 0058 5E80     		strh	r6, [r3, #2]
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->TxXferCount > 0)
1456:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       huart->TxXferCount--;
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1459:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         return HAL_TIMEOUT;
1461:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 3101              		.loc 1 1462 10 discriminator 2 view .LVU1022
 3102 005a 8026     		movs	r6, #128
1451:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3103              		.loc 1 1451 17 discriminator 2 view .LVU1023
 3104 005c 0290     		str	r0, [sp, #8]
 3105              	.LVL237:
1453:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->TxXferCount = Size;
 3106              		.loc 1 1453 5 is_stmt 1 discriminator 2 view .LVU1024
1454:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     while(huart->TxXferCount > 0)
 3107              		.loc 1 1454 5 discriminator 2 view .LVU1025
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3108              		.loc 1 1455 5 discriminator 2 view .LVU1026
 3109              		.loc 1 1462 10 is_stmt 0 discriminator 2 view .LVU1027
 3110 005e 7601     		lsls	r6, r6, #5
 3111              	.LVL238:
 3112              	.L293:
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3113              		.loc 1 1455 30 is_stmt 1 view .LVU1028
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3114              		.loc 1 1455 16 is_stmt 0 view .LVU1029
 3115 0060 2100     		movs	r1, r4
 3116 0062 5231     		adds	r1, r1, #82
 3117 0064 0B88     		ldrh	r3, [r1]
 3118 0066 9AB2     		uxth	r2, r3
1455:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
 3119              		.loc 1 1455 30 view .LVU1030
 3120 0068 002B     		cmp	r3, #0
 3121 006a 0DD1     		bne	.L297
1463:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1464:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         tmp = (uint16_t*) pData;
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
1467:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1468:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       else
1469:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
1471:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
1472:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1473:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 3122              		.loc 1 1473 5 is_stmt 1 view .LVU1031
 3123              		.loc 1 1473 8 is_stmt 0 view .LVU1032
 3124 006c 039B     		ldr	r3, [sp, #12]
 3125 006e 4021     		movs	r1, #64
 3126 0070 0093     		str	r3, [sp]
 3127 0072 2000     		movs	r0, r4
 3128 0074 029B     		ldr	r3, [sp, #8]
 3129 0076 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3130              	.LVL239:
 3131              		.loc 1 1473 7 view .LVU1033
 3132 007a 0028     		cmp	r0, #0
 3133 007c 12D1     		bne	.L298
1474:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     {
1475:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       return HAL_TIMEOUT;
1476:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     }
1477:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1478:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* At end of Tx process, restore huart->gState to Ready */
1479:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_READY;
 3134              		.loc 1 1479 5 is_stmt 1 view .LVU1034
 3135              		.loc 1 1479 19 is_stmt 0 view .LVU1035
 3136 007e 2023     		movs	r3, #32
1480:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1481:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     /* Process Unlocked */
1482:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
 3137              		.loc 1 1482 5 view .LVU1036
 3138 0080 6834     		adds	r4, r4, #104
 3139              	.LVL240:
1479:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
 3140              		.loc 1 1479 19 view .LVU1037
 3141 0082 3B70     		strb	r3, [r7]
 3142              		.loc 1 1482 5 is_stmt 1 view .LVU1038
 3143              		.loc 1 1482 5 view .LVU1039
 3144 0084 2070     		strb	r0, [r4]
 3145              		.loc 1 1482 5 view .LVU1040
1483:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** 
1484:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_OK;
 3146              		.loc 1 1484 5 view .LVU1041
 3147              		.loc 1 1484 12 is_stmt 0 view .LVU1042
 3148 0086 0EE0     		b	.L291
 3149              	.LVL241:
 3150              	.L297:
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3151              		.loc 1 1457 7 is_stmt 1 view .LVU1043
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3152              		.loc 1 1457 12 is_stmt 0 view .LVU1044
 3153 0088 0B88     		ldrh	r3, [r1]
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3154              		.loc 1 1458 10 view .LVU1045
 3155 008a 0022     		movs	r2, #0
1457:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3156              		.loc 1 1457 25 view .LVU1046
 3157 008c 013B     		subs	r3, r3, #1
 3158 008e 9BB2     		uxth	r3, r3
 3159 0090 0B80     		strh	r3, [r1]
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3160              		.loc 1 1458 7 is_stmt 1 view .LVU1047
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3161              		.loc 1 1458 10 is_stmt 0 view .LVU1048
 3162 0092 039B     		ldr	r3, [sp, #12]
 3163 0094 8021     		movs	r1, #128
 3164 0096 0093     		str	r3, [sp]
 3165 0098 2000     		movs	r0, r4
 3166 009a 029B     		ldr	r3, [sp, #8]
 3167 009c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3168              	.LVL242:
1458:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3169              		.loc 1 1458 9 view .LVU1049
 3170 00a0 0028     		cmp	r0, #0
 3171 00a2 02D0     		beq	.L294
 3172              	.L298:
1460:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3173              		.loc 1 1460 16 view .LVU1050
 3174 00a4 0320     		movs	r0, #3
 3175              	.LVL243:
 3176              	.L291:
1485:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1486:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   else
1487:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   {
1488:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****     return HAL_BUSY;
1489:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****   }
1490:.././hal/stm32f0/stm32f0_hal_lowlevel.c **** }
 3177              		.loc 1 1490 1 view .LVU1051
 3178 00a6 05B0     		add	sp, sp, #20
 3179              		@ sp needed
 3180              	.LVL244:
 3181              	.LVL245:
 3182              		.loc 1 1490 1 view .LVU1052
 3183 00a8 F0BD     		pop	{r4, r5, r6, r7, pc}
 3184              	.LVL246:
 3185              	.L294:
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3186              		.loc 1 1462 7 is_stmt 1 view .LVU1053
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3187              		.loc 1 1462 10 is_stmt 0 view .LVU1054
 3188 00aa A368     		ldr	r3, [r4, #8]
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3189              		.loc 1 1465 14 view .LVU1055
 3190 00ac 2268     		ldr	r2, [r4]
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3191              		.loc 1 1462 10 view .LVU1056
 3192 00ae B342     		cmp	r3, r6
 3193 00b0 08D1     		bne	.L295
1462:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       {
 3194              		.loc 1 1462 58 discriminator 1 view .LVU1057
 3195 00b2 2369     		ldr	r3, [r4, #16]
 3196 00b4 002B     		cmp	r3, #0
 3197 00b6 05D1     		bne	.L295
1464:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 3198              		.loc 1 1464 9 is_stmt 1 view .LVU1058
 3199              	.LVL247:
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3200              		.loc 1 1465 9 view .LVU1059
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3201              		.loc 1 1465 38 is_stmt 0 view .LVU1060
 3202 00b8 2B88     		ldrh	r3, [r5]
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3203              		.loc 1 1466 15 view .LVU1061
 3204 00ba 0235     		adds	r5, r5, #2
 3205              	.LVL248:
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3206              		.loc 1 1465 38 view .LVU1062
 3207 00bc DB05     		lsls	r3, r3, #23
 3208 00be DB0D     		lsrs	r3, r3, #23
1465:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****         pData += 2;
 3209              		.loc 1 1465 30 view .LVU1063
 3210 00c0 1385     		strh	r3, [r2, #40]
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3211              		.loc 1 1466 9 is_stmt 1 view .LVU1064
 3212              	.LVL249:
1466:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3213              		.loc 1 1466 15 is_stmt 0 view .LVU1065
 3214 00c2 CDE7     		b	.L293
 3215              	.LVL250:
 3216              	.L295:
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3217              		.loc 1 1470 9 is_stmt 1 view .LVU1066
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3218              		.loc 1 1470 33 is_stmt 0 view .LVU1067
 3219 00c4 2B78     		ldrb	r3, [r5]
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3220              		.loc 1 1470 39 view .LVU1068
 3221 00c6 0135     		adds	r5, r5, #1
 3222              	.LVL251:
1470:.././hal/stm32f0/stm32f0_hal_lowlevel.c ****       }
 3223              		.loc 1 1470 30 view .LVU1069
 3224 00c8 1385     		strh	r3, [r2, #40]
 3225 00ca C9E7     		b	.L293
 3226              		.cfi_endproc
 3227              	.LFE51:
 3229              		.global	SystemCoreClock
 3230              		.section	.rodata
 3231              		.set	.LANCHOR2,. + 0
 3234              	CSWTCH.25:
 3235 0000 04       		.byte	4
 3236 0001 08       		.byte	8
 3237 0002 02       		.byte	2
 3238              		.data
 3239              		.align	2
 3240              		.set	.LANCHOR1,. + 0
 3243              	SystemCoreClock:
 3244 0000 00127A00 		.word	8000000
 3245              		.bss
 3246              		.align	2
 3247              		.set	.LANCHOR0,. + 0
 3250              	tick.0:
 3251 0000 00000000 		.space	4
 3252              		.text
 3253              	.Letext0:
 3254              		.file 2 "/usr/lib/gcc/arm-none-eabi/12.2.1/include/stdint.h"
 3255              		.file 3 ".././hal/stm32f0/CMSIS/device/stm32f030x6.h"
 3256              		.file 4 ".././hal/stm32f0/CMSIS/device/stm32f0xx.h"
 3257              		.file 5 ".././hal/stm32f0/stm32f0xx_hal_def.h"
 3258              		.file 6 ".././hal/stm32f0/stm32f0xx_hal_rcc.h"
 3259              		.file 7 ".././hal/stm32f0/stm32f0xx_hal_rcc_ex.h"
 3260              		.file 8 ".././hal/stm32f0/stm32f0xx_hal_gpio.h"
 3261              		.file 9 ".././hal/stm32f0/stm32f0xx_hal_dma.h"
 3262              		.file 10 ".././hal/stm32f0/stm32f0xx_hal_uart.h"
 3263              		.file 11 ".././hal/stm32f0/CMSIS/device/system_stm32f0xx.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0_hal_lowlevel.c
     /tmp/ccWWyDgD.s:19     .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccWWyDgD.s:25     .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccWWyDgD.s:48     .text.HAL_GetTick:000000000000000c $d
     /tmp/ccWWyDgD.s:53     .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccWWyDgD.s:59     .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccWWyDgD.s:77     .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccWWyDgD.s:83     .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccWWyDgD.s:98     .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccWWyDgD.s:104    .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccWWyDgD.s:119    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccWWyDgD.s:125    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccWWyDgD.s:897    .text.HAL_RCC_OscConfig:0000000000000300 $d
     /tmp/ccWWyDgD.s:907    .text.HAL_RCC_OscConfig:0000000000000318 $t
     /tmp/ccWWyDgD.s:1056   .text.HAL_RCC_OscConfig:00000000000003b0 $d
     /tmp/ccWWyDgD.s:1063   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccWWyDgD.s:1069   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccWWyDgD.s:1348   .text.HAL_RCC_ClockConfig:0000000000000100 $d
     /tmp/ccWWyDgD.s:1357   .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 $t
     /tmp/ccWWyDgD.s:1363   .text.HAL_RCCEx_PeriphCLKConfig:0000000000000000 HAL_RCCEx_PeriphCLKConfig
     /tmp/ccWWyDgD.s:1636   .text.HAL_RCCEx_PeriphCLKConfig:00000000000000f4 $d
     /tmp/ccWWyDgD.s:1646   .text.HAL_GPIO_Init:0000000000000000 $t
     /tmp/ccWWyDgD.s:1652   .text.HAL_GPIO_Init:0000000000000000 HAL_GPIO_Init
     /tmp/ccWWyDgD.s:2057   .text.HAL_GPIO_Init:0000000000000150 $d
     /tmp/ccWWyDgD.s:2067   .text.HAL_GPIO_WritePin:0000000000000000 $t
     /tmp/ccWWyDgD.s:2073   .text.HAL_GPIO_WritePin:0000000000000000 HAL_GPIO_WritePin
     /tmp/ccWWyDgD.s:2104   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccWWyDgD.s:2110   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccWWyDgD.s:2222   .text.UART_WaitOnFlagUntilTimeout:0000000000000060 $d
     /tmp/ccWWyDgD.s:2227   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccWWyDgD.s:2233   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccWWyDgD.s:2277   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccWWyDgD.s:2283   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccWWyDgD.s:2410   .text.UART_SetConfig:000000000000006a $d
     /tmp/ccWWyDgD.s:2495   .text.UART_SetConfig:00000000000000ac $d
     /tmp/ccWWyDgD.s:2561   .text.UART_SetConfig:00000000000000e4 $d
     /tmp/ccWWyDgD.s:2572   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccWWyDgD.s:2578   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccWWyDgD.s:2724   .text.HAL_UART_Init:0000000000000060 $d
     /tmp/ccWWyDgD.s:2729   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccWWyDgD.s:2735   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccWWyDgD.s:2992   .text.HAL_UART_Receive:00000000000000e8 $d
     /tmp/ccWWyDgD.s:2997   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccWWyDgD.s:3003   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccWWyDgD.s:3243   .data:0000000000000000 SystemCoreClock
     /tmp/ccWWyDgD.s:3234   .rodata:0000000000000000 CSWTCH.25
     /tmp/ccWWyDgD.s:3239   .data:0000000000000000 $d
     /tmp/ccWWyDgD.s:3246   .bss:0000000000000000 $d
     /tmp/ccWWyDgD.s:3250   .bss:0000000000000000 tick.0
     /tmp/ccWWyDgD.s:2419   .text.UART_SetConfig:0000000000000073 $d
     /tmp/ccWWyDgD.s:2419   .text.UART_SetConfig:0000000000000074 $t
     /tmp/ccWWyDgD.s:2504   .text.UART_SetConfig:00000000000000b5 $d
     /tmp/ccWWyDgD.s:2504   .text.UART_SetConfig:00000000000000b6 $t

UNDEFINED SYMBOLS
__aeabi_uidiv
__gnu_thumb1_case_sqi
__gnu_thumb1_case_uqi
